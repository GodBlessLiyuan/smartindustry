<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.sm.StorageHeadMapper">
  <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.sm.StorageHeadPO">
    <id column="storage_head_id" jdbcType="BIGINT" property="storageHeadId" />
    <result column="warehouse_id" jdbcType="BIGINT" property="warehouseId" />
    <result column="storage_no" jdbcType="CHAR" property="storageNo" />
    <result column="source_no" jdbcType="CHAR" property="sourceNo" />
    <result column="source_type" jdbcType="TINYINT" property="sourceType" />
    <result column="storage_time" jdbcType="TIMESTAMP" property="storageTime" />
    <result column="expect_num" jdbcType="DECIMAL" property="expectNum" />
    <result column="storage_num" jdbcType="DECIMAL" property="storageNum" />
    <result column="remark" jdbcType="CHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="dr" jdbcType="TINYINT" property="dr" />
    <result column="pay_method" jdbcType="TINYINT" property="payMethod" />
    <result column="supplier_id" jdbcType="BIGINT" property="supplierId" />
  </resultMap>
  <sql id="Base_Column_List">
    storage_head_id, warehouse_id, storage_no, source_no, source_type, storage_time, 
    expect_num, storage_num, remark, `status`, create_time, dr, pay_method, supplier_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sm_storage_head
    where storage_head_id = #{storageHeadId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sm_storage_head
    where storage_head_id = #{storageHeadId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smartindustry.common.pojo.sm.StorageHeadPO" keyProperty="storageHeadId" useGeneratedKeys="true">
    insert into sm_storage_head (storage_head_id, warehouse_id, storage_no, 
      source_no, source_type, storage_time, 
      expect_num, storage_num, remark, 
      `status`, create_time, dr, 
      pay_method, supplier_id)
    values (#{storageHeadId,jdbcType=BIGINT}, #{warehouseId,jdbcType=BIGINT}, #{storageNo,jdbcType=CHAR}, 
      #{sourceNo,jdbcType=CHAR}, #{sourceType,jdbcType=TINYINT}, #{storageTime,jdbcType=TIMESTAMP}, 
      #{expectNum,jdbcType=DECIMAL}, #{storageNum,jdbcType=DECIMAL}, #{remark,jdbcType=CHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT}, 
      #{payMethod,jdbcType=TINYINT}, #{supplierId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.sm.StorageHeadPO">
    insert into sm_storage_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storageHeadId != null">
        storage_head_id,
      </if>
      <if test="warehouseId != null">
        warehouse_id,
      </if>
      <if test="storageNo != null">
        storage_no,
      </if>
      <if test="sourceNo != null">
        source_no,
      </if>
      <if test="sourceType != null">
        source_type,
      </if>
      <if test="storageTime != null">
        storage_time,
      </if>
      <if test="expectNum != null">
        expect_num,
      </if>
      <if test="storageNum != null">
        storage_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="dr != null">
        dr,
      </if>
      <if test="payMethod != null">
        pay_method,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storageHeadId != null">
        #{storageHeadId,jdbcType=BIGINT},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=BIGINT},
      </if>
      <if test="storageNo != null">
        #{storageNo,jdbcType=CHAR},
      </if>
      <if test="sourceNo != null">
        #{sourceNo,jdbcType=CHAR},
      </if>
      <if test="sourceType != null">
        #{sourceType,jdbcType=TINYINT},
      </if>
      <if test="storageTime != null">
        #{storageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectNum != null">
        #{expectNum,jdbcType=DECIMAL},
      </if>
      <if test="storageNum != null">
        #{storageNum,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=TINYINT},
      </if>
      <if test="payMethod != null">
        #{payMethod,jdbcType=TINYINT},
      </if>
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.sm.StorageHeadPO">
    update sm_storage_head
    <set>
      <if test="warehouseId != null">
        warehouse_id = #{warehouseId,jdbcType=BIGINT},
      </if>
      <if test="storageNo != null">
        storage_no = #{storageNo,jdbcType=CHAR},
      </if>
      <if test="sourceNo != null">
        source_no = #{sourceNo,jdbcType=CHAR},
      </if>
      <if test="sourceType != null">
        source_type = #{sourceType,jdbcType=TINYINT},
      </if>
      <if test="storageTime != null">
        storage_time = #{storageTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectNum != null">
        expect_num = #{expectNum,jdbcType=DECIMAL},
      </if>
      <if test="storageNum != null">
        storage_num = #{storageNum,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=TINYINT},
      </if>
      <if test="payMethod != null">
        pay_method = #{payMethod,jdbcType=TINYINT},
      </if>
      <if test="supplierId != null">
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
    </set>
    where storage_head_id = #{storageHeadId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.sm.StorageHeadPO">
    update sm_storage_head
    set warehouse_id = #{warehouseId,jdbcType=BIGINT},
      storage_no = #{storageNo,jdbcType=CHAR},
      source_no = #{sourceNo,jdbcType=CHAR},
      source_type = #{sourceType,jdbcType=TINYINT},
      storage_time = #{storageTime,jdbcType=TIMESTAMP},
      expect_num = #{expectNum,jdbcType=DECIMAL},
      storage_num = #{storageNum,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=CHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT},
      pay_method = #{payMethod,jdbcType=TINYINT},
      supplier_id = #{supplierId,jdbcType=BIGINT}
    where storage_head_id = #{storageHeadId,jdbcType=BIGINT}
  </update>


  <resultMap id="BOResultMap" type="com.smartindustry.common.bo.sm.StorageHeadBO" extends="BaseResultMap">
    <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
  </resultMap>
  <sql id="BO_Column_List">
     sh.storage_head_id, sh.storage_no,sh.source_no, sh.storage_time, sh.`status`, w.warehouse_name,sh.pay_method
  </sql>
  <select id="pageQuery" parameterType="java.util.Map" resultMap="BOResultMap">
    select
    <include refid="BO_Column_List" />
    from sm_storage_head sh
    left join si_warehouse w on sh.warehouse_id = w.warehouse_id
    where sh.dr = 1 and sh.source_type = 1
    <if test="wid != null and wid != 0">
      and w.warehouse_id = #{wid,jdbcType=TINYINT}
    </if>
    <if test="status != null and status != 0">
      and sh.`status` = #{status,jdbcType=TINYINT}
    </if>
    <if test="stime != null and stime != ''">
      and sh.storage_time like concat('%',#{stime,jdbcType=CHAR},'%')
    </if>
    order by sh.create_time desc
  </select>

  <select id="pageQueryPro" parameterType="java.util.Map" resultMap="BOResultMap">
    select
    <include refid="BO_Column_List" />
    from sm_storage_head sh
    left join si_warehouse w on sh.warehouse_id = w.warehouse_id
    where sh.dr = 1 and sh.source_type in(2,3)
    <if test="no != null and no != ''">
      and (sh.storage_no like '%' #{no,jdbcType=CHAR} '%' or
      sh.source_no like '%' #{no,jdbcType=CHAR} '%')
    </if>
    <if test="wid != null and wid != 0">
      and sh.warehouse_id = #{wid,jdbcType=BIGINT}
    </if>
    <if test="status != null and status != 0">
      and sh.`status` = #{status,jdbcType=TINYINT}
    </if>
    order by sh.create_time desc
  </select>

  <resultMap id="BOSResultMap" type="com.smartindustry.common.bo.sm.StorageHeadBO" extends="BaseResultMap">
    <result column="storage_head_id" jdbcType="BIGINT" property="storageHeadId"/>
    <result column="storage_no" jdbcType="CHAR" property="storageNo"/>
    <result column="status" jdbcType="TINYINT" property="status"/>
    <result column="warehouse_id" jdbcType="BIGINT" property="warehouseId"/>
    <result column="pay_method" jdbcType="TINYINT" property="payMethod"/>
    <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
    <result column="supplier_id" jdbcType="CHAR" property="supplierId"/>
    <result column="supplier_name" jdbcType="CHAR" property="supplierName"/>
    <result column="remark" jdbcType="CHAR" property="remark"/>
    <collection property="bos" ofType="com.smartindustry.common.bo.sm.StorageBodyBO">
      <id column="storage_body_id" jdbcType="BIGINT" property="storageBodyId"/>
      <result column="material_id" jdbcType="BIGINT" property="materialId"/>
      <result column="material_no" jdbcType="CHAR" property="materialNo"/>
      <result column="material_name" jdbcType="CHAR" property="materialName"/>
      <result column="material_model" jdbcType="CHAR" property="materialModel"/>
      <result column="storage_num" jdbcType="INTEGER" property="storageNum"/>
      <result column="accept_time" jdbcType="TIMESTAMP" property="acceptTime"/>
      <result column="supplier_name" jdbcType="CHAR" property="supplierName"/>
      <result column="measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
      <result column="unit_price" jdbcType="DECIMAL" property="unitPrice"/>
      <result column="sum_price" jdbcType="DECIMAL" property="sumPrice"/>
      <result column="unit_price_notax" jdbcType="DECIMAL" property="unitPriceNotax"/>
      <result column="sum_price_notax" jdbcType="DECIMAL" property="sumPriceNotax"/>
      <result column="location_id" jdbcType="BIGINT" property="locationId"/>
      <result column="location_no" jdbcType="CHAR" property="locationNo"/>
    </collection>
  </resultMap>
  <sql id="BOS_Column_List">
      sh.storage_head_id, sh.storage_no,sh.status,su1.supplier_id,su1.supplier_name, sh.remark,sh.pay_method,w.warehouse_id, w.warehouse_name, sb.storage_body_id,sb.material_id, m.material_no,
      m.material_name, m.material_model, su.supplier_name, sb.storage_num,sb.accept_time,mu.measure_unit_name,sb.unit_price, sb.sum_price, sb.unit_price_notax, sb.sum_price_notax,l.location_id,l.location_no
  </sql>
  <select id="queryByShid" parameterType="java.lang.Long" resultMap="BOSResultMap">
    select
    <include refid="BOS_Column_List" />
    from sm_storage_head sh
    left join si_supplier su1 on sh.supplier_id = su1.supplier_id
    left join si_warehouse w on sh.warehouse_id = w.warehouse_id
    left join sm_storage_body sb on sh.storage_head_id = sb.storage_head_id
    left join si_location l on sb.location_id = l.location_id
    left join si_material m on sb.material_id = m.material_id
    left join si_supplier su on m.supplier_id = su.supplier_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    where sh.dr = 1 and sb.dr = 1 and sh.storage_head_id = #{shid,jdbcType=BIGINT}
  </select>

  <select id = "queryAll" parameterType="java.util.Map" resultMap="BOSResultMap">
    select
    <include refid="BOS_Column_List" />
    from sm_storage_head sh
    left join si_warehouse w on sh.warehouse_id = w.warehouse_id
    left join sm_storage_body sb on sh.storage_head_id = sb.storage_head_id
    left join si_location l on sb.location_id = l.location_id
    left join si_material m on sb.material_id = m.material_id
    left join si_supplier su on m.supplier_id = su.supplier_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    <where>
      <if test="status != null and status != 0">
        and sh.`status` = #{status,jdbcType=TINYINT}
      </if>
      <if test="stype != null">
        and sh.source_type = #{stype,jdbcType=TINYINT}
      </if>
    </where>

  </select>

  <select id="queryNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from sm_storage_head
    where storage_no like #{no,jdbcType=CHAR} '%'
    order by storage_head_id desc limit 1
  </select>

  <sql id="Pda_Column_List">
        sh.storage_head_id, sh.source_type, sh.source_no, sh.expect_num, sh.storage_num, sh.create_time,
        m.material_id, m.material_no, m.material_name, m.material_model, m.package_volume
    </sql>
  <resultMap id="PdaResultMap" type="com.smartindustry.common.bo.sm.StorageHeadBO" extends="BaseResultMap">
    <result column="storage_head_id" jdbcType="BIGINT" property="storageHeadId"/>
    <collection property="bos" ofType="com.smartindustry.common.bo.sm.StorageBodyBO">
      <id column="storage_body_id" jdbcType="BIGINT" property="storageBodyId"/>
      <result column="material_id" jdbcType="BIGINT" property="materialId"/>
      <result column="material_no" jdbcType="CHAR" property="materialNo"/>
      <result column="material_name" jdbcType="CHAR" property="materialName"/>
      <result column="material_model" jdbcType="CHAR" property="materialModel"/>
      <result column="package_volume" jdbcType="DECIMAL" property="packageVolume"/>
      <result column="expect_num" jdbcType="DECIMAL" property="expectNum"/>
      <result column="storage_num" jdbcType="DECIMAL" property="storageNum"/>
    </collection>
  </resultMap>
  <select id="queryPdaByType" parameterType="java.lang.Byte" resultMap="PdaResultMap">
    select
    <include refid="Pda_Column_List"/>
    from sm_storage_head sh
    left join sm_storage_body sb on sh.storage_head_id = sb.storage_head_id
    left join si_material m on sb.material_id = m.material_id
    where sh.source_type = 2 and sh.dr = 1
    <if test="type == 1">
      and sh.status != 1 and sh.storage_head_id not in (select distinct storage_head_id from sm_storage_forklift)
    </if>
    <if test="type == 2">
      and sh.status != 1 and sh.storage_head_id in (select distinct storage_head_id from sm_storage_forklift)
    </if>
    <if test="type == 3">
      and sh.status = 1
    </if>
    <if test="type == 4">
      and sh.status = 3 and sh.source_no not in (select distinct produce_order_id from wo_package)
    </if>
  </select>

    <select id="queryPrepareNo" parameterType="java.util.Date" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sm_storage_head sh
        where sh.dr = 1 and date(cdate) = curdate() and (date_format(sh.create_time,'%H:%i') between
        date_format(stime,'%H:%i') and date_format(etime,'%H:%i')) limit 1
    </select>

    <select id="queryByStatus" parameterType="java.lang.Byte" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from sm_storage_head sh
        where sh.dr = 1 and sh.`status` = #{status,jdbcType=TINYINT} and sh.source_type = #{type,jdbcType=TINYINT}
    </select>

  <select id="queryPdaDetailByShid" parameterType="java.lang.Long" resultMap="PdaResultMap">
    select
    <include refid="Pda_Column_List"/>
    from sm_storage_head sh
    left join sm_storage_body sb on sh.storage_head_id = sb.storage_head_id
    left join si_material m on sb.material_id = m.material_id
    where sh.source_type = 2 and sh.dr = 1 and sh.storage_head_id = #{shid,jdbcType=BIGINT}
  </select>
  <select id="queryBySourceNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sm_storage_head sh
    where sh.source_no = #{sourceNo,jdbcType=CHAR}
  </select>


  <sql id="Storage_Column_List">
      sh.storage_head_id,sh.storage_no,sh.source_no,sh.storage_time,sh.status,l.warehouse_id,w.warehouse_name,
     sd.location_id,l.location_no,m.material_id,m.material_no,m.material_name,count(sd.rfid) as num,m.package_volume,mu.measure_unit_name
  </sql>
  <resultMap id="StorageResultMap" type="com.smartindustry.common.bo.sm.StorageHeadBO">
    <result column="storage_head_id" jdbcType="BIGINT" property="storageHeadId"/>
    <result column="storage_no" jdbcType="CHAR" property="storageNo"/>
    <result column="source_no" jdbcType="CHAR" property="sourceNo"/>
    <result column="storage_time" jdbcType="TIMESTAMP" property="storageTime"/>
    <result column="status" jdbcType="TINYINT" property="status"/>
    <collection property="warehouseBOS" resultMap="warehouseListResp"/>
  </resultMap>

  <resultMap id="warehouseListResp" type="com.smartindustry.common.bo.sm.WarehouseBO">
    <id column="warehouse_id" jdbcType="BIGINT" property="warehouseId" />
    <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
    <collection property="locationBOS" resultMap="locationListResp"/>
  </resultMap>

  <resultMap id="locationListResp" type="com.smartindustry.common.bo.sm.LocationBO">
    <id column="location_id" jdbcType="BIGINT" property="locationId" />
    <result column="location_no" jdbcType="CHAR" property="locationNo"/>
    <collection property="materialBOS" ofType="com.smartindustry.common.bo.sm.MaterialBO">
      <id column="material_id" jdbcType="BIGINT" property="materialId" />
      <result column="material_no" jdbcType="CHAR" property="materialNo"/>
      <result column="material_name" jdbcType="CHAR" property="materialName"/>
      <result column="package_volume" jdbcType="DECIMAL" property="packageVolume"/>
      <result column="num" jdbcType="INTEGER" property="num"/>
      <result column="measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
    </collection>
  </resultMap>

  <select id="queryStored" parameterType="java.lang.Long" resultMap="StorageResultMap">
    select
    <include refid="Storage_Column_List"/>
    from sm_storage_head sh
    left join sm_storage_detail sd on sh.storage_head_id = sd.storage_head_id
    left join si_location l on sd.location_id = l.location_id
    left join si_material m on l.material_id = m.material_id
    left join si_warehouse w on l.warehouse_id = w.warehouse_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    where sh.dr = 1 and sh.storage_head_id = #{shid,jdbcType=BIGINT} and (sd.storage_status = 1 or sd.storage_status is null)
    group by sd.storage_head_id,sd.location_id
  </select>

  <select id="queryAwaitStore" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.sm.MaterialDetailBO">
    select
    <include refid="Base_Column_List" />
    from sm_storage_head sh
    left join sm_storage_detail sd on sh.storage_head_id = sd.storage_head_id
    where sh.dr = 1 and sh.storage_head_id = #{shid,jdbcType=BIGINT} and (sd.storage_status = 3 or sd.dr = 2)
  </select>
  <select id="queryByStorageNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sm_storage_head sh
    where sh.storage_no = #{storageNo,jdbcType=CHAR} limit 1
  </select>

  <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="storageHeadId">
    insert into sm_storage_head (storage_head_id, warehouse_id, storage_no,
    source_no, source_type, storage_time,
    expect_num, storage_num, remark,
    `status`, create_time, dr,
    pay_method, supplier_id
    )
    values
    <foreach collection="list" separator="," item="po">
      (#{po.storageHeadId,jdbcType=BIGINT}, #{po.warehouseId,jdbcType=BIGINT}, #{po.storageNo,jdbcType=CHAR},
      #{po.sourceNo,jdbcType=CHAR}, #{po.sourceType,jdbcType=TINYINT}, #{po.storageTime,jdbcType=TIMESTAMP},
      #{po.expectNum,jdbcType=DECIMAL}, #{po.storageNum,jdbcType=DECIMAL}, #{po.remark,jdbcType=CHAR},
      #{po.status,jdbcType=TINYINT}, #{po.createTime,jdbcType=TIMESTAMP}, #{po.dr,jdbcType=TINYINT},
      #{po.payMethod,jdbcType=TINYINT}, #{po.supplierId,jdbcType=BIGINT})
    </foreach>
  </insert>

  <sql id="Storage_Detail_Column_List">
     m.material_id, m.material_no, m.material_name, w.warehouse_name, l.location_no, l.location_name, sd.rfid, m.package_volume, mu.measure_unit_name
  </sql>
  <resultMap id="DetailListResp" type="com.smartindustry.common.bo.sm.MaterialDetailBO">
    <id column="material_id" jdbcType="BIGINT" property="materialId" />
    <result column="material_no" jdbcType="CHAR" property="materialNo"/>
    <result column="material_name" jdbcType="CHAR" property="materialName"/>
    <result column="package_volume" jdbcType="DECIMAL" property="packageVolume"/>
    <result column="measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
    <collection property="bos" ofType="com.smartindustry.common.bo.sm.LocationDetailBO">
      <result column="warehouse_name" jdbcType="CHAR" property="warehouseName" />
      <result column="location_no" jdbcType="CHAR" property="locationNo"/>
      <result column="location_name" jdbcType="CHAR" property="locationName"/>
      <result column="rfid" jdbcType="CHAR" property="rfid" />
      <result column="package_volume" jdbcType="DECIMAL" property="packageVolume"/>
      <result column="measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
    </collection>
  </resultMap>
  <select id="queryDetail" resultMap="DetailListResp">
    select
    <include refid="Storage_Detail_Column_List" />
    from sm_storage_head sh
    left join sm_storage_detail sd on sh.storage_head_id = sd.storage_head_id
    left join si_location l on sd.location_id = l.location_id
    left join si_material m on l.material_id = m.material_id
    left join si_warehouse w on l.warehouse_id = w.warehouse_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    where sh.dr = 1 and sh.storage_head_id = #{shid,jdbcType=BIGINT} and sd.storage_status = 1
    <if test="lid != null and lid != 0">
      and l.location_id = #{lid,jdbcType=BIGINT}
    </if>
  </select>

  <select id="queryPrepare" parameterType="java.lang.Long" resultMap="DetailListResp">
    select
    <include refid="Storage_Detail_Column_List" />
    from sm_storage_head sh
    left join sm_storage_detail sd on sh.storage_head_id = sd.storage_head_id
    left join si_location l on sd.location_id = l.location_id
    left join si_material m on l.material_id = m.material_id
    left join si_warehouse w on l.warehouse_id = w.warehouse_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    where sd.storage_head_id = #{shid,jdbcType=BIGINT} and sd.preparation = 2
  </select>

  <select id="querySave" parameterType="java.lang.Long" resultMap="DetailListResp">
    select
    <include refid="Storage_Detail_Column_List" />
    from sm_storage_head sh
    left join sm_storage_detail sd on sh.storage_head_id = sd.storage_head_id
    left join si_location l on sd.location_id = l.location_id
    left join si_material m on l.material_id = m.material_id
    left join si_warehouse w on l.warehouse_id = w.warehouse_id
    left join dd_measure_unit mu on m.measure_unit_id = mu.measure_unit_id
    where sd.storage_head_id = #{shid,jdbcType=BIGINT} and sd.location_id is null and sd.storage_status = 3 and sd.preparation = 1
  </select>

  <select id="queryNowUnfinishedByType" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sm_storage_head sh
    where sh.dr = 1 and
    sh.`status` != 1 and sh.source_type = #{type,jdbcType=TINYINT}
    order by sh.creat_time desc limit 1
  </select>
</mapper>