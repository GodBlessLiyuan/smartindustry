<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.sm.ReceiptBodyMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.sm.ReceiptBodyPO">
        <id column="receipt_body_id" jdbcType="BIGINT" property="receiptBodyId"/>
        <result column="receipt_head_id" jdbcType="BIGINT" property="receiptHeadId"/>
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="source_no" jdbcType="CHAR" property="sourceNo"/>
        <result column="source_type" jdbcType="TINYINT" property="sourceType"/>
        <result column="receipt_no" jdbcType="CHAR" property="receiptNo"/>
        <result column="order_total" jdbcType="INTEGER" property="orderTotal"/>
        <result column="accept_num" jdbcType="INTEGER" property="acceptNum"/>
        <result column="accept_date" jdbcType="TIMESTAMP" property="acceptDate"/>
        <result column="good_num" jdbcType="INTEGER" property="goodNum"/>
        <result column="bad_num" jdbcType="INTEGER" property="badNum"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        receipt_body_id, receipt_head_id, material_id, source_no, source_type, receipt_no,
    order_total, accept_num, accept_date, good_num, bad_num, stock_num, `status`, create_time, 
    dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sm_receipt_body
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.sm.ReceiptBodyPO">
        insert into sm_receipt_body (receipt_body_id, receipt_head_id, material_id,
                                     source_no, source_type, receipt_no,
                                     order_total, accept_num, accept_date,
                                     good_num, bad_num, stock_num,
                                     `status`, create_time, dr)
        values (#{receiptBodyId,jdbcType=BIGINT}, #{receiptHeadId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT},
                #{sourceNo,jdbcType=CHAR}, #{sourceType,jdbcType=TINYINT}, #{receiptNo,jdbcType=CHAR},
                #{orderTotal,jdbcType=INTEGER}, #{acceptNum,jdbcType=INTEGER}, #{acceptDate,jdbcType=TIMESTAMP},
                #{goodNum,jdbcType=INTEGER}, #{badNum,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER},
                #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.sm.ReceiptBodyPO">
        insert into sm_receipt_body
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="receiptBodyId != null">
                receipt_body_id,
            </if>
            <if test="receiptHeadId != null">
                receipt_head_id,
            </if>
            <if test="materialId != null">
                material_id,
            </if>
            <if test="sourceNo != null">
                source_no,
            </if>
            <if test="sourceType != null">
                source_type,
            </if>
            <if test="receiptNo != null">
                receipt_no,
            </if>
            <if test="orderTotal != null">
                order_total,
            </if>
            <if test="acceptNum != null">
                accept_num,
            </if>
            <if test="acceptDate != null">
                accept_date,
            </if>
            <if test="goodNum != null">
                good_num,
            </if>
            <if test="badNum != null">
                bad_num,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="receiptBodyId != null">
                #{receiptBodyId,jdbcType=BIGINT},
            </if>
            <if test="receiptHeadId != null">
                #{receiptHeadId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                #{materialId,jdbcType=BIGINT},
            </if>
            <if test="sourceNo != null">
                #{sourceNo,jdbcType=CHAR},
            </if>
            <if test="sourceType != null">
                #{sourceType,jdbcType=TINYINT},
            </if>
            <if test="receiptNo != null">
                #{receiptNo,jdbcType=CHAR},
            </if>
            <if test="orderTotal != null">
                #{orderTotal,jdbcType=INTEGER},
            </if>
            <if test="acceptNum != null">
                #{acceptNum,jdbcType=INTEGER},
            </if>
            <if test="acceptDate != null">
                #{acceptDate,jdbcType=TIMESTAMP},
            </if>
            <if test="goodNum != null">
                #{goodNum,jdbcType=INTEGER},
            </if>
            <if test="badNum != null">
                #{badNum,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.sm.ReceiptBodyPO">
        update sm_receipt_body
        <set>
            <if test="receiptHeadId != null">
                receipt_head_id = #{receiptHeadId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                material_id = #{materialId,jdbcType=BIGINT},
            </if>
            <if test="sourceNo != null">
                source_no = #{sourceNo,jdbcType=CHAR},
            </if>
            <if test="sourceType != null">
                source_type = #{sourceType,jdbcType=TINYINT},
            </if>
            <if test="receiptNo != null">
                receipt_no = #{receiptNo,jdbcType=CHAR},
            </if>
            <if test="orderTotal != null">
                order_total = #{orderTotal,jdbcType=INTEGER},
            </if>
            <if test="acceptNum != null">
                accept_num = #{acceptNum,jdbcType=INTEGER},
            </if>
            <if test="acceptDate != null">
                accept_date = #{acceptDate,jdbcType=TIMESTAMP},
            </if>
            <if test="goodNum != null">
                good_num = #{goodNum,jdbcType=INTEGER},
            </if>
            <if test="badNum != null">
                bad_num = #{badNum,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.sm.ReceiptBodyPO">
        update sm_receipt_body
        set receipt_head_id = #{receiptHeadId,jdbcType=BIGINT},
            material_id     = #{materialId,jdbcType=BIGINT},
            source_no       = #{sourceNo,jdbcType=CHAR},
            source_type     = #{sourceType,jdbcType=TINYINT},
            receipt_no      = #{receiptNo,jdbcType=CHAR},
            order_total     = #{orderTotal,jdbcType=INTEGER},
            accept_num      = #{acceptNum,jdbcType=INTEGER},
            accept_date     = #{acceptDate,jdbcType=TIMESTAMP},
            good_num        = #{goodNum,jdbcType=INTEGER},
            bad_num         = #{badNum,jdbcType=INTEGER},
            stock_num       = #{stockNum,jdbcType=INTEGER},
            `status`        = #{status,jdbcType=TINYINT},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            dr              = #{dr,jdbcType=TINYINT}
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </update>

    <sql id="ReceiptBodyBO_Column_List">
        rb.receipt_body_id, rb.receipt_head_id, rb.material_id, rb.source_no, rb.source_type, rb.receipt_no,
    rb.order_total, rb.accept_num, rb.accept_date, rb.good_num, rb.bad_num, rb.stock_num, rb.`status`, rb.create_time, rb.dr,
    m.material_id, m.material_no, m.material_type, m.material_name, m.material_model, m.material_desc, m.test_type
    </sql>
    <sql id="ReceiptBO_Column_List">
        rb.receipt_body_id, rb.receipt_head_id, rb.material_id, rb.source_no, rb.source_type, rb.receipt_no,
    rb.order_total, rb.accept_num, rb.accept_date, rb.good_num, rb.bad_num, rb.stock_num, rb.`status`, rb.create_time, rb.dr,
    m.material_no, m.material_type, m.material_name, m.material_model, m.material_desc, m.test_type,
    rh.order_date, rh.supplier, rh.buyer, rh.plan_date, rh.logistics_company, rh.logistics_no,  rh.receipt_way, rh.remark
    </sql>
    <resultMap id="ReceiptBodyBOResultMap" type="com.smartindustry.common.bo.sm.ReceiptBodyBO" extends="BaseResultMap">
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="material_no" jdbcType="CHAR" property="materialNo"/>
        <result column="material_type" jdbcType="TINYINT" property="materialType"/>
        <result column="material_name" jdbcType="CHAR" property="materialName"/>
        <result column="material_model" jdbcType="CHAR" property="materialModel"/>
        <result column="material_desc" jdbcType="CHAR" property="materialDesc"/>
        <result column="test_type" jdbcType="TINYINT" property="testType"/>
    </resultMap>
    <resultMap id="ReceiptBOResultMap" type="com.smartindustry.common.bo.sm.ReceiptBO" extends="ReceiptBodyBOResultMap">
        <result column="order_date" jdbcType="DATE" property="orderDate"/>
        <result column="supplier" jdbcType="CHAR" property="supplier"/>
        <result column="buyer" jdbcType="CHAR" property="buyer"/>
        <result column="plan_date" jdbcType="DATE" property="planDate"/>
        <result column="logistics_company" jdbcType="CHAR" property="logisticsCompany"/>
        <result column="logistics_no" jdbcType="CHAR" property="logisticsNo"/>
        <result column="receipt_way" jdbcType="TINYINT" property="receiptWay"/>
        <result column="remark" jdbcType="CHAR" property="remark"/>
        <result column="qaStatus" jdbcType="CHAR" property="qaStatus"/>
    </resultMap>
    <select id="pageQuery" resultMap="ReceiptBOResultMap">
        select
        <include refid="ReceiptBO_Column_List"/>
        <if test="qa">
            , q.status as qaStatus
        </if>
        from sm_receipt_body rb
        left join si_material m on rb.material_id = m.material_id
        left join sm_receipt_head rh on rb.receipt_head_id = rh.receipt_head_id
        <if test="qa">
            <choose>
                <when test="status == 5">
                    left join sm_iqc_detect q on rb.receipt_body_id = q.receipt_body_id
                </when>
                <when test="status == 10">
                    left join sm_qe_detect q on rb.receipt_body_id = q.receipt_body_id
                </when>
                <when test="status == 15">
                    left join sm_qe_confirm q on rb.receipt_body_id = q.receipt_body_id
                </when>
            </choose>
        </if>
        where rh.dr = 1 and rb.dr = 1
        <if test="keyword != null and keyword != ''">and (m.material_no like '%' #{keyword,jdbcType=CHAR} '%' or
            m.material_desc like '%' #{keyword,jdbcType=CHAR} '%')
        </if>
        <if test="supplier != null and supplier != ''">and rh.supplier like '%' #{supplier,jdbcType=CHAR} '%'</if>
        <if test="ono != null and ono != ''">and rh.source_no like '%' #{ono,jdbcType=CHAR} '%'</if>
        <if test="status != null and status != 0">and rb.`status` = #{status,jdbcType=TINYINT}</if>
        <if test="type != null and type != 0">and rh.source_type = #{type,jdbcType=TINYINT}</if>
        <if test="rno != null and rno != ''">and rb.receipt_no like '%' #{rno,jdbcType=CHAR} '%'</if>
        <if test="qa and qaStatus != null and qaStatus != 0">and q.status = #{qaStatus,jdbcType=TINYINT}</if>
        <if test="qa">
            order by rb.accept_date desc
        </if>
        <if test="!qa">
            order by rb.create_time desc
        </if>
    </select>
    <insert id="batchInsertBO" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="receiptBodyId">
        insert into sm_receipt_body (receipt_body_id, receipt_head_id, material_id,
        source_no, source_type, receipt_no,
        order_total, accept_num, accept_date,
        good_num, bad_num, stock_num,
        `status`, create_time, dr)
        values
        <foreach collection="list" item="bo" separator=",">
            (#{bo.receiptBodyId,jdbcType=BIGINT}, #{bo.receiptHeadId,jdbcType=BIGINT}, #{bo.materialId,jdbcType=BIGINT},
            #{bo.sourceNo,jdbcType=CHAR}, #{bo.sourceType,jdbcType=TINYINT}, #{bo.receiptNo,jdbcType=CHAR},
            #{bo.orderTotal,jdbcType=INTEGER}, #{bo.acceptNum,jdbcType=INTEGER}, #{bo.acceptDate,jdbcType=TIMESTAMP},
            #{bo.goodNum,jdbcType=INTEGER}, #{bo.badNum,jdbcType=INTEGER}, #{bo.stockNum,jdbcType=INTEGER},
            #{bo.status,jdbcType=TINYINT}, #{bo.createTime,jdbcType=TIMESTAMP}, #{bo.dr,jdbcType=TINYINT})
        </foreach>
    </insert>
    <select id="queryNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_no like #{no,jdbcType=CHAR} '%'
        order by receipt_body_id desc limit 1
    </select>
    <update id="batchDelete" parameterType="java.util.List">
        update sm_receipt_body set dr = 2
        where receipt_body_id in (
        <foreach collection="list" separator="," item="rbId">
            #{rbId,jdbcType=BIGINT}
        </foreach>)
    </update>
    <select id="queryHeadIds" parameterType="java.util.List" resultType="java.lang.Long">
        select distinct receipt_head_id
        from sm_receipt_body
        where receipt_body_id in (
        <foreach collection="list" separator="," item="rbId">
            #{rbId,jdbcType=BIGINT}
        </foreach>
        )
    </select>
    <select id="queryByHeadId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_head_id = #{receiptHeadId,jdbcType=BIGINT} and dr = 1
    </select>
    <select id="queryByBodyId" parameterType="java.lang.Long" resultMap="ReceiptBodyBOResultMap">
        select
        <include refid="ReceiptBodyBO_Column_List"/>
        from sm_receipt_body rb
        left join si_material m on rb.material_id = m.material_id
        where rb.receipt_body_id = #{rbId,jdbcType=BIGINT} and rb.dr = 1
    </select>
    <select id="queryByMids" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where dr = 1 and material_id in
        <foreach collection="list" separator="," item="mid" open="(" close=")">
            #{mid,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="countHandleNum" resultType="java.lang.Integer">
        SELECT
        count(rb.receipt_body_id)
        FROM
        sm_receipt_body rb
        LEFT JOIN si_material m ON rb.material_id = m.material_id
        LEFT JOIN sm_receipt_head rh ON rb.receipt_head_id = rh.receipt_head_id
        <choose>
            <when test="status == 5">
                left join sm_iqc_detect q on rb.receipt_body_id = q.receipt_body_id
            </when>
            <when test="status == 10">
                left join sm_qe_detect q on rb.receipt_body_id = q.receipt_body_id
            </when>
            <when test="status == 15">
                left join sm_qe_confirm q on rb.receipt_body_id = q.receipt_body_id
            </when>
        </choose>
        WHERE rh.dr = 1 AND rb.dr = 1
        AND rb.`status` = #{status, jdbcType=TINYINT} and q.status = #{qaStatus, jdbcType=TINYINT}
    </select>
</mapper>