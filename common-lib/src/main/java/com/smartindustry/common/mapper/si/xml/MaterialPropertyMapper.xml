<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.si.MaterialPropertyMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.si.MaterialPropertyPO">
        <id column="material_property_id" jdbcType="BIGINT" property="materialPropertyId"/>
        <result column="lower_limit" jdbcType="DECIMAL" property="lowerLimit"/>
        <result column="upper_limit" jdbcType="DECIMAL" property="upperLimit"/>
        <result column="default_purchase" jdbcType="DECIMAL" property="defaultPurchase"/>
        <result column="way" jdbcType="TINYINT" property="way"/>
        <result column="warehouse_id" jdbcType="BIGINT" property="warehouseId"/>
        <result column="location_id" jdbcType="BIGINT" property="locationId"/>
        <result column="storage_inspect" jdbcType="TINYINT" property="storageInspect"/>
        <result column="storage_inspect_type" jdbcType="TINYINT" property="storageInspectType"/>
        <result column="storage_sampling_plan" jdbcType="TINYINT" property="storageSamplingPlan"/>
        <result column="outbound_inspect" jdbcType="TINYINT" property="outboundInspect"/>
        <result column="pick_split" jdbcType="TINYINT" property="pickSplit"/>
    </resultMap>
    <sql id="Base_Column_List">
        material_property_id, lower_limit, upper_limit, default_purchase, way, warehouse_id,
    location_id, storage_inspect, storage_inspect_type, storage_sampling_plan, outbound_inspect, 
    pick_split
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from si_material_property
        where material_property_id = #{materialPropertyId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from si_material_property
        where material_property_id = #{materialPropertyId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.si.MaterialPropertyPO">
        insert into si_material_property (material_property_id, lower_limit, upper_limit,
                                          default_purchase, way, warehouse_id,
                                          location_id, storage_inspect, storage_inspect_type,
                                          storage_sampling_plan, outbound_inspect, pick_split)
        values (#{materialPropertyId,jdbcType=BIGINT}, #{lowerLimit,jdbcType=DECIMAL}, #{upperLimit,jdbcType=DECIMAL},
                #{defaultPurchase,jdbcType=DECIMAL}, #{way,jdbcType=TINYINT}, #{warehouseId,jdbcType=BIGINT},
                #{locationId,jdbcType=BIGINT}, #{storageInspect,jdbcType=TINYINT},
                #{storageInspectType,jdbcType=TINYINT},
                #{storageSamplingPlan,jdbcType=TINYINT}, #{outboundInspect,jdbcType=TINYINT},
                #{pickSplit,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.si.MaterialPropertyPO">
        insert into si_material_property
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialPropertyId != null">
                material_property_id,
            </if>
            <if test="lowerLimit != null">
                lower_limit,
            </if>
            <if test="upperLimit != null">
                upper_limit,
            </if>
            <if test="defaultPurchase != null">
                default_purchase,
            </if>
            <if test="way != null">
                way,
            </if>
            <if test="warehouseId != null">
                warehouse_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
            <if test="storageInspect != null">
                storage_inspect,
            </if>
            <if test="storageInspectType != null">
                storage_inspect_type,
            </if>
            <if test="storageSamplingPlan != null">
                storage_sampling_plan,
            </if>
            <if test="outboundInspect != null">
                outbound_inspect,
            </if>
            <if test="pickSplit != null">
                pick_split,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialPropertyId != null">
                #{materialPropertyId,jdbcType=BIGINT},
            </if>
            <if test="lowerLimit != null">
                #{lowerLimit,jdbcType=DECIMAL},
            </if>
            <if test="upperLimit != null">
                #{upperLimit,jdbcType=DECIMAL},
            </if>
            <if test="defaultPurchase != null">
                #{defaultPurchase,jdbcType=DECIMAL},
            </if>
            <if test="way != null">
                #{way,jdbcType=TINYINT},
            </if>
            <if test="warehouseId != null">
                #{warehouseId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=BIGINT},
            </if>
            <if test="storageInspect != null">
                #{storageInspect,jdbcType=TINYINT},
            </if>
            <if test="storageInspectType != null">
                #{storageInspectType,jdbcType=TINYINT},
            </if>
            <if test="storageSamplingPlan != null">
                #{storageSamplingPlan,jdbcType=TINYINT},
            </if>
            <if test="outboundInspect != null">
                #{outboundInspect,jdbcType=TINYINT},
            </if>
            <if test="pickSplit != null">
                #{pickSplit,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.si.MaterialPropertyPO">
        update si_material_property
        <set>
            <if test="lowerLimit != null">
                lower_limit = #{lowerLimit,jdbcType=DECIMAL},
            </if>
            <if test="upperLimit != null">
                upper_limit = #{upperLimit,jdbcType=DECIMAL},
            </if>
            <if test="defaultPurchase != null">
                default_purchase = #{defaultPurchase,jdbcType=DECIMAL},
            </if>
            <if test="way != null">
                way = #{way,jdbcType=TINYINT},
            </if>
            <if test="warehouseId != null">
                warehouse_id = #{warehouseId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=BIGINT},
            </if>
            <if test="storageInspect != null">
                storage_inspect = #{storageInspect,jdbcType=TINYINT},
            </if>
            <if test="storageInspectType != null">
                storage_inspect_type = #{storageInspectType,jdbcType=TINYINT},
            </if>
            <if test="storageSamplingPlan != null">
                storage_sampling_plan = #{storageSamplingPlan,jdbcType=TINYINT},
            </if>
            <if test="outboundInspect != null">
                outbound_inspect = #{outboundInspect,jdbcType=TINYINT},
            </if>
            <if test="pickSplit != null">
                pick_split = #{pickSplit,jdbcType=TINYINT},
            </if>
        </set>
        where material_property_id = #{materialPropertyId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.si.MaterialPropertyPO">
        update si_material_property
        set lower_limit           = #{lowerLimit,jdbcType=DECIMAL},
            upper_limit           = #{upperLimit,jdbcType=DECIMAL},
            default_purchase      = #{defaultPurchase,jdbcType=DECIMAL},
            way                   = #{way,jdbcType=TINYINT},
            warehouse_id          = #{warehouseId,jdbcType=BIGINT},
            location_id           = #{locationId,jdbcType=BIGINT},
            storage_inspect       = #{storageInspect,jdbcType=TINYINT},
            storage_inspect_type  = #{storageInspectType,jdbcType=TINYINT},
            storage_sampling_plan = #{storageSamplingPlan,jdbcType=TINYINT},
            outbound_inspect      = #{outboundInspect,jdbcType=TINYINT},
            pick_split            = #{pickSplit,jdbcType=TINYINT}
        where material_property_id = #{materialPropertyId,jdbcType=BIGINT}
    </update>
</mapper>