<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.om.PickBodyMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.om.PickBodyPO">
        <id column="pick_body_id" jdbcType="BIGINT" property="pickBodyId"/>
        <result column="pick_head_id" jdbcType="BIGINT" property="pickHeadId"/>
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="demand_num" jdbcType="INTEGER" property="demandNum"/>
        <result column="pick_num" jdbcType="INTEGER" property="pickNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="exception" jdbcType="CHAR" property="exception"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        pick_body_id, pick_head_id, material_id, demand_num, pick_num, create_time, `exception`,
    dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_body
        where pick_body_id = #{pickBodyId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from om_pick_body
        where pick_body_id = #{pickBodyId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.om.PickBodyPO">
        insert into om_pick_body (pick_body_id, pick_head_id, material_id,
                                  demand_num, pick_num, create_time,
                                  `exception`, dr)
        values (#{pickBodyId,jdbcType=BIGINT}, #{pickHeadId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT},
                #{demandNum,jdbcType=INTEGER}, #{pickNum,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{exception,jdbcType=CHAR}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.om.PickBodyPO">
        insert into om_pick_body
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pickBodyId != null">
                pick_body_id,
            </if>
            <if test="pickHeadId != null">
                pick_head_id,
            </if>
            <if test="materialId != null">
                material_id,
            </if>
            <if test="demandNum != null">
                demand_num,
            </if>
            <if test="pickNum != null">
                pick_num,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="exception != null">
                `exception`,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pickBodyId != null">
                #{pickBodyId,jdbcType=BIGINT},
            </if>
            <if test="pickHeadId != null">
                #{pickHeadId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                #{materialId,jdbcType=BIGINT},
            </if>
            <if test="demandNum != null">
                #{demandNum,jdbcType=INTEGER},
            </if>
            <if test="pickNum != null">
                #{pickNum,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exception != null">
                #{exception,jdbcType=CHAR},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.om.PickBodyPO">
        update om_pick_body
        <set>
            <if test="pickHeadId != null">
                pick_head_id = #{pickHeadId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                material_id = #{materialId,jdbcType=BIGINT},
            </if>
            <if test="demandNum != null">
                demand_num = #{demandNum,jdbcType=INTEGER},
            </if>
            <if test="pickNum != null">
                pick_num = #{pickNum,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="exception != null">
                `exception` = #{exception,jdbcType=CHAR},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where pick_body_id = #{pickBodyId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.om.PickBodyPO">
        update om_pick_body
        set pick_head_id = #{pickHeadId,jdbcType=BIGINT},
            material_id  = #{materialId,jdbcType=BIGINT},
            demand_num   = #{demandNum,jdbcType=INTEGER},
            pick_num     = #{pickNum,jdbcType=INTEGER},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            `exception`  = #{exception,jdbcType=CHAR},
            dr           = #{dr,jdbcType=TINYINT}
        where pick_body_id = #{pickBodyId,jdbcType=BIGINT}
    </update>

    <resultMap id="BOResultMap" type="com.smartindustry.common.bo.om.PickBodyBO" extends="BaseResultMap">
        <result column="material_no" jdbcType="CHAR" property="materialNo"/>
        <result column="material_desc" jdbcType="CHAR" property="materialDesc"/>
    </resultMap>
    <sql id="BO_Column_List">
        pb.pick_body_id, pb.pick_head_id, pb.material_id, pb.demand_num, pb.pick_num, pb.create_time, pb.`exception`, pb.dr,
        m.material_no, m.material_desc
    </sql>
    <select id="queryByHeadId" parameterType="java.lang.Long" resultMap="BOResultMap">
        select
        <include refid="BO_Column_List"/>
        from om_pick_body pb
        left join si_material m on pb.material_id = m.material_id
        where pb.pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </select>
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="pickBodyId">
        insert into om_pick_body (pick_body_id, pick_head_id, material_id,
        demand_num, pick_num, create_time,
        `exception`, dr)
        values
        <foreach collection="list" separator="," item="po">
            (#{po.pickBodyId,jdbcType=BIGINT}, #{po.pickHeadId,jdbcType=BIGINT}, #{po.materialId,jdbcType=BIGINT},
            #{po.demandNum,jdbcType=INTEGER}, #{po.pickNum,jdbcType=INTEGER}, #{po.createTime,jdbcType=TIMESTAMP},
            #{po.exception,jdbcType=CHAR}, #{po.dr,jdbcType=TINYINT})
        </foreach>
    </insert>

    <!--    根据拣货单id 和 物料编号查询异常情况-->
    <select id="queryException" resultType="java.lang.String">
        select `exception`
        from om_pick_body
        where pick_head_id = #{pickHeadId}
          and material_id = #{materialId}
    </select>

    <update id="updateException">
        update om_pick_body
        set `exception` = #{exception,jdbcType=CHAR}
        where pick_head_id = #{pickHeadId}
          and material_no = #{materialNo}
    </update>
</mapper>