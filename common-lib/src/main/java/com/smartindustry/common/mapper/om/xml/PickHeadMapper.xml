<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.om.PickHeadMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.om.PickHeadPO">
        <id column="pick_head_id" jdbcType="BIGINT" property="pickHeadId"/>
        <result column="pick_no" jdbcType="CHAR" property="pickNo"/>
        <result column="order_no" jdbcType="CHAR" property="orderNo"/>
        <result column="order_type" jdbcType="TINYINT" property="orderType"/>
        <result column="material_status" jdbcType="TINYINT" property="materialStatus"/>
        <result column="correspond_project" jdbcType="CHAR" property="correspondProject"/>
        <result column="plan_time" jdbcType="TIMESTAMP" property="planTime"/>
        <result column="outbound_time" jdbcType="TIMESTAMP" property="outboundTime"/>
        <result column="outbound_status" jdbcType="TINYINT" property="outboundStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        pick_head_id, pick_no, order_no, order_type, material_status, correspond_project,
    plan_time, outbound_time, outbound_status, create_time, dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from om_pick_head
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.om.PickHeadPO" useGeneratedKeys="true"
            keyProperty="pickHeadId">
        insert into om_pick_head (pick_head_id, pick_no, order_no,
                                  order_type, material_status, correspond_project,
                                  plan_time, outbound_time, outbound_status,
                                  create_time, dr)
        values (#{pickHeadId,jdbcType=BIGINT}, #{pickNo,jdbcType=CHAR}, #{orderNo,jdbcType=CHAR},
                #{orderType,jdbcType=TINYINT}, #{materialStatus,jdbcType=TINYINT}, #{correspondProject,jdbcType=CHAR},
                #{planTime,jdbcType=TIMESTAMP}, #{outboundTime,jdbcType=TIMESTAMP}, #{outboundStatus,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        insert into om_pick_head
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pickHeadId != null">
                pick_head_id,
            </if>
            <if test="pickNo != null">
                pick_no,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="materialStatus != null">
                material_status,
            </if>
            <if test="correspondProject != null">
                correspond_project,
            </if>
            <if test="planTime != null">
                plan_time,
            </if>
            <if test="outboundTime != null">
                outbound_time,
            </if>
            <if test="outboundStatus != null">
                outbound_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pickHeadId != null">
                #{pickHeadId,jdbcType=BIGINT},
            </if>
            <if test="pickNo != null">
                #{pickNo,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=TINYINT},
            </if>
            <if test="materialStatus != null">
                #{materialStatus,jdbcType=TINYINT},
            </if>
            <if test="correspondProject != null">
                #{correspondProject,jdbcType=CHAR},
            </if>
            <if test="planTime != null">
                #{planTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundTime != null">
                #{outboundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundStatus != null">
                #{outboundStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        update om_pick_head
        <set>
            <if test="pickNo != null">
                pick_no = #{pickNo,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=TINYINT},
            </if>
            <if test="materialStatus != null">
                material_status = #{materialStatus,jdbcType=TINYINT},
            </if>
            <if test="correspondProject != null">
                correspond_project = #{correspondProject,jdbcType=CHAR},
            </if>
            <if test="planTime != null">
                plan_time = #{planTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundTime != null">
                outbound_time = #{outboundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundStatus != null">
                outbound_status = #{outboundStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        update om_pick_head
        set pick_no            = #{pickNo,jdbcType=CHAR},
            order_no           = #{orderNo,jdbcType=CHAR},
            order_type         = #{orderType,jdbcType=TINYINT},
            material_status    = #{materialStatus,jdbcType=TINYINT},
            correspond_project = #{correspondProject,jdbcType=CHAR},
            plan_time          = #{planTime,jdbcType=TIMESTAMP},
            outbound_time      = #{outboundTime,jdbcType=TIMESTAMP},
            outbound_status    = #{outboundStatus,jdbcType=TINYINT},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            dr                 = #{dr,jdbcType=TINYINT}
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </update>
    <!--    查看所有工单拣货单的情况-->
    <select id="pageQueryPickHeadMsg" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where material_status = #{materialStatus}
        <if test="pickNo != null and pickNo != ''">
            and ph.pick_no like '%' #{pickNo} '%'
        </if>
        <if test="orderNo != null and orderNo != ''">
            and ph.order_no like '%' #{orderNo} '%'
        </if>
        <if test="correspondProject != null and correspondProject != ''">
            and ph.correspondProject like '%' #{correspondProject} '%'
        </if>
        order by ph.create_time desc
    </select>
    <!--    扫码拣货-->
    <select id="pickPid" parameterType="java.lang.String"
            resultType="com.smartindustry.common.bo.si.PrintLabelBO">
        select pl.package_id as packageId,pl.material_no as materialNo,ma.material_name as materialName,ma.material_desc as materialDesc,pl.num as num
        from si_print_label pl
        left join si_material ma on pl.material_no = ma.material_no
        where pl.package_id=#{packageId}
    </select>

    <!--    查看当前工单拣货单的所有欠料列表-->
    <select id="materialLoss" resultType="com.smartindustry.common.bo.om.MaterialBO">
        select pb.material_no as materialNo,ma.material_name as materialName,ma.material_desc as
        materialDesc,pb.demand_num as demandNum,pb.pick_num as pickNum, (pb.demand_num-pb.pick_num) as lackNum
        from om_pick_head ph
        left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
        left join si_material ma on pb.material_no = ma.material_no
        where ph.dr =1 and ph.pick_no = #{pickNo}
        <if test="materialNo != null and materialNo != ''">
            and ma.material_no like '%' #{materialNo} '%'
        </if>
        <if test="materialName != null and materialName != ''">
            and ma.materialName like '%' #{materialName} '%'
        </if>
        <if test="flag != null and flag != ''">
            and material_loss_num &lt;=0
        </if>
    </select>
    <!--    查看当前工单拣货单的推荐pid-->
    <select id="queryRecommend" parameterType="java.lang.String" resultType="java.lang.String">
        select sl.package_id
        from om_pick_head ph
        left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
        left join om_label_recommend lr on pb.pick_body_id = lr.pick_body_id
        left join si_storage_label sl on lr.storage_label_id = sl.storage_label_id
        where ph.pick_no=#{pickNo}
    </select>

    <!--    查看当前工单拣货单的各个物料的真实打印pid-->
    <select id="queryRealPid" parameterType="java.lang.String" resultType="com.smartindustry.common.bo.om.PickHeadBO">
        select ph.pick_no,pb.material_no,GROUP_CONCAT(pl.package_id)
        from om_pick_head ph
        left join om_pick_label pil on ph.pick_head_id = pil.pick_head_id
        left join si_print_label pl on pil.print_label_id = pl.print_label_id
        left join si_material ma on pl.material_no = ma.material_no
        where ph.pick_no = #{pickNo}
        group by ph.pick_no,pb.material_no
    </select>

    <!--    判断某个物料是否在该工单下-->
    <select id="judgeMaterial" parameterType="java.lang.String" resultType="java.lang.String">
        select pb.material_no as materialNo
        from om_pick_head ph
        left join om_pick_body pb on pb.pick_head_id = ph.pick_head_id
        where ph.pick_no = #{pickNo}
    </select>
    
    <update id="addPickNum">
        update om_pick_body pb
        set pb.pick_num = pb.pick_num + #{pickNum}
        where pb.material_no = #{materialNo}
    </update>

    <insert id="insertPickLabel" parameterType="com.smartindustry.common.pojo.om.PickLabelPO">
        insert into om_pick_label (pick_head_id,print_label_id,recommend)
        values (#{pickHeadId,jdbcType=BIGINT},#{printLabelId,jdbcType=BIGINT},#{recommend,jdbcType=TINYINT})
    </insert>

    <select id="queryByPickNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head
        where pick_no = #{pickNo}
    </select>
    
<!--    当物料的已拣货量未满需求量，查找出其他推荐的pid-->
<!--    <select id="queryAbnormal" parameterType="java.lang.String">-->
<!--        select spl.material_no as materialNo,ma.material_name as materialName,ma.material_desc as materialDesc,GROUP_CONCAT(spl.package_id) as noRecommend-->
<!--        from om_pick_head ph-->
<!--        left join om_pick_label opl on ph.pick_head_id = opl.pick_head_id-->
<!--        left join si_print_label spl on opl.print_label_id = spl.print_label_id-->
<!--        left join si_material ma on spl.material_no = ma.material_no-->
<!--        where opl.recommend = 2 and ph.pick_no = #{pickNo}-->
<!--        group by ph.pick_no,spl.material_no-->
<!--    </select>-->

<!--    当物料的已拣货量已满足需求量，查找出未扫描优先推荐的pid-->
<!--    <select id="queryLack" parameterType="java.lang.String">-->
<!--        select-->
<!--        from om_pick_body pb-->
<!--        left join om_pick_head ph on pb.pick_head_id = ph.pick_head_id-->
<!--        inner join om_pick_label opl on ph.pick_head_id = opl.pick_head_id-->
<!--    </select>-->
</mapper>