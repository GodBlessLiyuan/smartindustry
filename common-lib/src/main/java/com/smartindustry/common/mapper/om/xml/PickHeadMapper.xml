<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.om.PickHeadMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.om.PickHeadPO">
        <id column="pick_head_id" jdbcType="BIGINT" property="pickHeadId"/>
        <result column="pick_no" jdbcType="CHAR" property="pickNo"/>
        <result column="order_no" jdbcType="CHAR" property="orderNo"/>
        <result column="order_type" jdbcType="TINYINT" property="orderType"/>
        <result column="material_status" jdbcType="TINYINT" property="materialStatus"/>
        <result column="correspond_project" jdbcType="CHAR" property="correspondProject"/>
        <result column="accept_customer" jdbcType="CHAR" property="acceptCustomer"/>
        <result column="accept_address" jdbcType="CHAR" property="acceptAddress"/>
        <result column="plan_time" jdbcType="TIMESTAMP" property="planTime"/>
        <result column="outbound_time" jdbcType="TIMESTAMP" property="outboundTime"/>
        <result column="outbound_status" jdbcType="TINYINT" property="outboundStatus"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        pick_head_id, pick_no, order_no, order_type, material_status, correspond_project,
    accept_customer, accept_address, plan_time, outbound_time, outbound_status, create_time, 
    update_time, dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from om_pick_head
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.om.PickHeadPO" useGeneratedKeys="true"
            keyProperty="pickHeadId">
        insert into om_pick_head (pick_head_id, pick_no, order_no,
                                  order_type, material_status, correspond_project,
                                  accept_customer, accept_address, plan_time,
                                  outbound_time, outbound_status, create_time,
                                  update_time, dr)
        values (#{pickHeadId,jdbcType=BIGINT}, #{pickNo,jdbcType=CHAR}, #{orderNo,jdbcType=CHAR},
                #{orderType,jdbcType=TINYINT}, #{materialStatus,jdbcType=TINYINT}, #{correspondProject,jdbcType=CHAR},
                #{acceptCustomer,jdbcType=CHAR}, #{acceptAddress,jdbcType=CHAR}, #{planTime,jdbcType=TIMESTAMP},
                #{outboundTime,jdbcType=TIMESTAMP}, #{outboundStatus,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        insert into om_pick_head
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="pickHeadId != null">
                pick_head_id,
            </if>
            <if test="pickNo != null">
                pick_no,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="materialStatus != null">
                material_status,
            </if>
            <if test="correspondProject != null">
                correspond_project,
            </if>
            <if test="acceptCustomer != null">
                accept_customer,
            </if>
            <if test="acceptAddress != null">
                accept_address,
            </if>
            <if test="planTime != null">
                plan_time,
            </if>
            <if test="outboundTime != null">
                outbound_time,
            </if>
            <if test="outboundStatus != null">
                outbound_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="pickHeadId != null">
                #{pickHeadId,jdbcType=BIGINT},
            </if>
            <if test="pickNo != null">
                #{pickNo,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=TINYINT},
            </if>
            <if test="materialStatus != null">
                #{materialStatus,jdbcType=TINYINT},
            </if>
            <if test="correspondProject != null">
                #{correspondProject,jdbcType=CHAR},
            </if>
            <if test="acceptCustomer != null">
                #{acceptCustomer,jdbcType=CHAR},
            </if>
            <if test="acceptAddress != null">
                #{acceptAddress,jdbcType=CHAR},
            </if>
            <if test="planTime != null">
                #{planTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundTime != null">
                #{outboundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundStatus != null">
                #{outboundStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        update om_pick_head
        <set>
            <if test="pickNo != null">
                pick_no = #{pickNo,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=TINYINT},
            </if>
            <if test="materialStatus != null">
                material_status = #{materialStatus,jdbcType=TINYINT},
            </if>
            <if test="correspondProject != null">
                correspond_project = #{correspondProject,jdbcType=CHAR},
            </if>
            <if test="acceptCustomer != null">
                accept_customer = #{acceptCustomer,jdbcType=CHAR},
            </if>
            <if test="acceptAddress != null">
                accept_address = #{acceptAddress,jdbcType=CHAR},
            </if>
            <if test="planTime != null">
                plan_time = #{planTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundTime != null">
                outbound_time = #{outboundTime,jdbcType=TIMESTAMP},
            </if>
            <if test="outboundStatus != null">
                outbound_status = #{outboundStatus,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.om.PickHeadPO">
        update om_pick_head
        set pick_no            = #{pickNo,jdbcType=CHAR},
            order_no           = #{orderNo,jdbcType=CHAR},
            order_type         = #{orderType,jdbcType=TINYINT},
            material_status    = #{materialStatus,jdbcType=TINYINT},
            correspond_project = #{correspondProject,jdbcType=CHAR},
            accept_customer    = #{acceptCustomer,jdbcType=CHAR},
            accept_address     = #{acceptAddress,jdbcType=CHAR},
            plan_time          = #{planTime,jdbcType=TIMESTAMP},
            outbound_time      = #{outboundTime,jdbcType=TIMESTAMP},
            outbound_status    = #{outboundStatus,jdbcType=TINYINT},
            create_time        = #{createTime,jdbcType=TIMESTAMP},
            update_time        = #{updateTime,jdbcType=TIMESTAMP},
            dr                 = #{dr,jdbcType=TINYINT}
        where pick_head_id = #{pickHeadId,jdbcType=BIGINT}
    </update>

    <!--    查看所有工单拣货单的情况-->
    <select id="pageQueryPickHeadMsg" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where ph.dr = 1 and ph.order_type = 1
        <if test="materialStatus != null and materialStatus != 0">
            and ph.material_status = #{materialStatus}
        </if>
        <if test="pickNo != null and pickNo != ''">
            and ph.pick_no like concat('%',#{pickNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderNo != null and orderNo != ''">
            and ph.order_no like concat('%',#{orderNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="correspondProject != null and correspondProject != ''">
            and ph.correspond_project like concat('%',#{correspondProject,jdbcType=VARCHAR},'%')
        </if>
        order by ph.create_time desc
    </select>

    <!--    查看成品拣货单-->
    <select id="queryPickGoods" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where ph.dr = 1 and ph.order_type = 2
        <if test="materialStatus != null and materialStatus != 0">
            and ph.material_status = #{materialStatus}
        </if>
        <if test="pickNo != null and pickNo != ''">
            and ph.pick_no like concat('%',#{pickNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderNo != null and orderNo != ''">
            and ph.order_no like concat('%',#{orderNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="correspondProject != null and correspondProject != ''">
            and ph.correspond_project like concat('%',#{correspondProject,jdbcType=VARCHAR},'%')
        </if>
        order by ph.create_time desc
    </select>

    <!--    工单拣货单审核查询-->
    <select id="outOrderCheck" parameterType="java.util.Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where ph.dr = 1 and ph.order_type = 1 and ph.material_status = 15
        <if test="pickNo != null and pickNo != ''">
            and ph.pick_no like concat('%',#{pickNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="correspondProject != null and correspondProject != ''">
            and ph.correspond_project like concat('%',#{correspondProject,jdbcType=VARCHAR},'%')
        </if>
        order by ph.update_time desc
    </select>

    <!--    扫码拣货-->
    <select id="pickPid" parameterType="java.lang.String"
            resultType="com.smartindustry.common.bo.si.PrintLabelBO">
        select pl.print_label_id as printLabelId,
               pl.package_id     as packageId,
               pl.material_id    as materialId,
               ma.material_no    as materialNo,
               ma.material_name  as materialName,
               ma.material_desc  as materialDesc,
               pl.num            as num
        from si_print_label pl
                 left join si_material ma on pl.material_id = ma.material_id
        where pl.package_id = #{packageId}
          and pl.dr = 1
    </select>

    <!--    查看当前工单拣货单的所有欠料列表-->
    <select id="materialLoss" resultType="com.smartindustry.common.bo.om.PickBodyBO">
        select pb.pick_body_id as pickBodyId,ma.material_no as materialNo,ma.material_name as
        materialName,ma.material_desc as
        materialDesc,pb.demand_num as demandNum,pb.pick_num as pickNum,
        (case
        when pb.demand_num-pb.pick_num > 0 then (pb.demand_num-pb.pick_num) else 0
        end) as lackNum,
        (case
        when pb.demand_num-pb.pick_num > 0 then 0 else 1
        end) as flag
        from om_pick_head ph
        left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
        left join si_material ma on pb.material_id = ma.material_id
        where ph.dr =1 and ph.pick_head_id = #{pickHeadId}
        <if test="materialNo != null and materialNo != ''">
            and ma.material_no like concat('%',#{materialNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="materialName != null and materialName != ''">
            and ma.material_name like concat('%',#{materialName,jdbcType=VARCHAR},'%')
        </if>
        ORDER BY flag desc
    </select>
    <!--    查看当前工单拣货单的推荐pid-->
    <select id="queryRecommend" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.om.PickHeadBO">
        select m.material_no as materialNo, GROUP_CONCAT(sl.package_id) as recommendPid
        from om_pick_head ph
                 left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
                 left join om_label_recommend lr on pb.pick_body_id = lr.pick_body_id
                 left join si_storage_label sl on lr.storage_label_id = sl.storage_label_id
                 left join si_material m on pb.material_id = m.material_id
        where ph.pick_head_id = #{pickHeadId}
        GROUP BY pb.material_id
    </select>

    <!--    查看当前工单拣货单的推荐,不和物料编号对应的-->
    <select id="queryReOnlyPid" parameterType="java.lang.Long" resultType="java.lang.String">
        select sl.package_id
        from om_pick_head ph
                 left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
                 left join om_label_recommend lr on pb.pick_body_id = lr.pick_body_id
                 left join si_storage_label sl on lr.storage_label_id = sl.storage_label_id
        where ph.pick_head_id = #{pickHeadId}
    </select>

    <!--  当拣货量大于需求量才查询 查询所有当前工单号推荐的pid-->
    <select id="queryAllRePid" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.om.PickHeadBO">
        select pb.material_id as materialId, GROUP_CONCAT(spl.package_id) as recommendPid, ma.material_no as materialNo
        from om_pick_body pb
                 left join om_pick_head ph on pb.pick_head_id = ph.pick_head_id
                 left join om_pick_label opl on ph.pick_head_id = opl.pick_head_id
                 left join si_print_label spl on opl.print_label_id = spl.print_label_id
                 left join si_material ma on spl.material_id = ma.material_id
        where opl.recommend = 1
          and ph.pick_head_id = #{pickHeadId}
          and (pb.pick_num - pb.demand_num >= 0)
        group by pb.material_id, ma.material_no
    </select>

    <!--    查看当前工单拣货单的各个物料的真实打印pid-->
    <select id="queryRealPid" parameterType="java.lang.String" resultType="com.smartindustry.common.bo.om.PickHeadBO">
        select ph.pick_no, ma.material_no, GROUP_CONCAT(pl.package_id)
        from om_pick_head ph
                 left join om_pick_label pil on ph.pick_head_id = pil.pick_head_id
                 left join si_print_label pl on pil.print_label_id = pl.print_label_id
                 left join si_material ma on pl.material_id = ma.material_id
        where ph.pick_no = #{pickNo}
        group by ph.pick_no, ma.material_no
    </select>

    <!--    判断某个物料是否在该工单下-->
    <select id="judgeMaterial" parameterType="java.lang.Long" resultType="java.lang.String">
        select m.material_no as materialNo
        from om_pick_head ph
                 left join om_pick_body pb on pb.pick_head_id = ph.pick_head_id
                 left join si_material m on pb.material_id = m.material_id
        where ph.pick_head_id = #{pickHeadId}
    </select>

    <update id="addPickNum">
        update om_pick_body pb
        set pb.pick_num = pb.pick_num + #{pickNum}
        where pb.pick_head_id = #{pickHeadId}
          and pb.material_id = #{materialId}
    </update>

    <insert id="insertPickLabel" parameterType="com.smartindustry.common.pojo.om.PickLabelPO">
        insert into om_pick_label (pick_head_id, print_label_id, recommend, create_time)
        values (#{pickHeadId,jdbcType=BIGINT}, #{printLabelId,jdbcType=BIGINT}, #{recommend,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <select id="queryByPickNo" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head
        where pick_head_id = #{pickHeadId}
    </select>

    <!--    异常列表提醒：(1)当拣货量未满需求量时，异常提示扫描了其他推荐的pid;(2)当拣货量超过需求量时，提示-->
    <!--    未扫描优先推荐的pid,扫描了其他推荐的pid-->
    <!--    当物料的已拣货量未满需求量，查找出其他推荐的pid-->
    <select id="queryNoRecommend" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.om.PickHeadBO">
        select ph.pick_head_id              as pickHeadId,
               ma.material_id               as materialId,
               ma.material_no               as materialNo,
               ma.material_name             as materialName,
               ma.material_desc             as materialDesc,
               GROUP_CONCAT(spl.package_id) as noRecommendPid
        from om_pick_head ph
                 left join om_pick_label opl on ph.pick_head_id = opl.pick_head_id
                 left join si_print_label spl on opl.print_label_id = spl.print_label_id
                 left join si_material ma on spl.material_id = ma.material_id
        where opl.recommend = 2
          and ph.pick_head_id = #{pickHeadId}
        group by ph.pick_no, spl.material_id
    </select>

    <!--    按照创建时间顺序进行当前拣货单号的所有已扫码入库的信息查询-->
    <select id="showScanItems" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.si.PrintLabelBO">
        select pl.print_label_id as printLabelId,
               spl.package_id    as packageId,
               ma.material_no    as materialNo,
               ma.material_name  as materialName,
               ma.material_desc  as materialDesc,
               spl.num           as num
        from om_pick_label pl
                 left join si_print_label spl on pl.print_label_id = spl.print_label_id
                 left join si_material ma on spl.material_id = ma.material_id
        where pl.pick_head_id = #{pickHeadId}
          and spl.dr = 1
        order by pl.create_time desc
    </select>

    <select id="judgeIsPick" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_label pl on ph.pick_head_id = pl.pick_head_id
                 left join si_print_label spl on pl.print_label_id = spl.print_label_id
                 left join si_material ma on spl.material_id = ma.material_id
        where ph.pick_head_id = #{pickHeadId}
          and spl.package_id is not null
        limit 1
    </select>

    <!--    扫码拣货列表选中删除-->
    <delete id="deleteScanPid">
        delete
        from om_pick_label
        where print_label_id = #{printLabelId}
          and pick_head_id = #{pickHeadId}
    </delete>

    <!--    查询拆分后的pid关联当前pid-->
    <select id="printLabelSplit" parameterType="java.lang.String"
            resultType="com.smartindustry.common.bo.si.PrintLabelBO">
        select pl.print_label_id as printLabelId,
               pl.package_id     as packageId,
               ma.material_no    as materialNo,
               ma.material_name  as materialName,
               ma.material_desc  as materialDesc,
               pl.num            as num,
               pl.create_time    as createTime,
               pl.produce_date   as produceDate
        from si_print_label pl
                 left join si_material ma on pl.material_id = ma.material_id
        where pl.relate_package_id = #{packageId}
          and pl.dr = 1
        limit 2
    </select>

    <!--    更新当前pickHeadId 的物料状态, 从未处理到物料拣货/从物料拣货到未处理-->
    <update id="updateStatus">
        update om_pick_head ph
        set ph.material_status = #{materialStatus},
            update_time        = #{updateTime,jdbcType=TIMESTAMP}
        where ph.pick_head_id = #{pickHeadId}
    </update>

    <update id="updateOutStatus">
        update om_pick_head ph
        set ph.outbound_status = #{outboundStatus}
        where ph.pick_head_id = #{pickHeadId}
    </update>

    <!--    查询当前工单号是否是异常列表，欠料情况，不欠料出库-->
    <select id="judgeIsEx" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_label pl on ph.pick_head_id = pl.pick_head_id
        where ph.pick_head_id = #{pickHeadId}
          and pl.recommend = 2
        limit 1
    </select>
    <select id="judgeIsLack" parameterType="java.lang.Long" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
        where ph.pick_head_id = #{pickHeadId}
          and (pb.pick_num - pb.demand_num &lt; 0)
        limit 1
    </select>

    <!--    查看当前物料是否在当前工单物料列表下-->
    <select id="judgeIsMaHave" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_body pb on ph.pick_head_id = pb.pick_head_id
                 left join si_material m on pb.material_id = m.material_id
        where ph.pick_head_id = #{pickHeadId}
          and m.material_no = #{materialNo}
        limit 1
    </select>

    <!--    查看当前的pid是否已在当前工单拣货下-->
    <select id="judgeIsPidHave" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_label pl on ph.pick_head_id = pl.pick_head_id
                 left join si_print_label spl on pl.print_label_id = spl.print_label_id
        where ph.pick_head_id = #{pickHeadId}
          and spl.package_id = #{packageId}
        limit 1
    </select>

    <!--    恢复当前PID的标签打印单-->
    <update id="resumePid">
        update si_print_label pl
        set pl.dr = 1
        where pl.package_id = #{packageId}
    </update>
    <!--    将分料后的PID设置为废弃-->
    <update id="deletePid">
        update si_print_label pl
        set pl.dr = 2
        where pl.relate_package_id = #{packageId}
    </update>

    <!--    判断当前PID的是否已在某工单拣货单扫码列表中-->
    <select id="judgePidInPhid" resultType="java.lang.Integer">
        select 1
        from om_pick_head ph
                 left join om_pick_label pl on ph.pick_head_id = pl.pick_head_id
                 left join si_print_label spl on pl.print_label_id = spl.print_label_id
        where spl.package_id = #{packageId}
        limit 1
    </select>

    <!--    查看OQC检测的分页查询-->
    <select id="queryOqc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where ph.dr = 1 and ph.order_type = 2 and ph.material_status = 15
        <if test="pickNo != null and pickNo != ''">
            and ph.pick_no like concat('%',#{pickNo,jdbcType=VARCHAR},'%')
        </if>
        <if test="orderNo != null and orderNo != ''">
            and ph.order_no like concat('%',#{orderNo,jdbcType=VARCHAR},'%')
        </if>
        order by ph.update_time desc
    </select>

    <!--    若在扫码时删除已扫码的PID,那么已拣货量要相应的减去-->
    <update id="updatePickNum">
        update om_pick_body pb
        set pb.pick_num = pb.pick_num - #{num}
        where pb.pick_head_id = #{pickHeadId}
          and pb.material_id = #{materialId}
    </update>

    <!--    查询给定分料后的PID的关联子pid-->
    <select id="queryChildPid" parameterType="java.lang.String" resultType="java.lang.String">
        select pl.package_id as packageId
        from si_print_label pl
        where pl.relate_package_id = #{packageId}
          and pl.dr = 1
    </select>


    <!--    查找当前工单拣货单得所有PID详情-->
    <select id="queryByPhidItems" parameterType="java.lang.Long"
            resultType="com.smartindustry.common.pojo.si.PrintLabelPO">
        select spl.print_label_id    as printLabelId,
               spl.package_id        as packageId,
               spl.num               as num,
               spl.create_time       as createTime,
               spl.relate_package_id as relatePackageId
        from om_pick_head ph
                 left join om_pick_label pl on ph.pick_head_id = pl.pick_head_id
                 left join si_print_label spl on pl.print_label_id = spl.print_label_id
        where ph.pick_head_id = #{pickHeadId}
          and ph.dr = 1
          and spl.package_id is not null
    </select>

    <select id="queryOnoByPid" parameterType="java.lang.Long" resultType="java.lang.String">
        select distinct order_no
        from si_storage_label
        where print_label_id = #{printLabelId}
    </select>

    <select id="queryNotRecommodByOno" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from om_pick_head ph
        where ph.dr = 1 and ph.material_status = 1 and ph.order_no = #{orderNo,jdbcType=CHAR}
    </select>
</mapper>