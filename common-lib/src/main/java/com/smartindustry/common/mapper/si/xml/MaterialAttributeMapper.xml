<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.si.MaterialAttributeMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.si.MaterialAttributePO">
        <id column="material_attribute_id" jdbcType="BIGINT" property="materialAttributeId"/>
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="lower_limit" jdbcType="DECIMAL" property="lowerLimit"/>
        <result column="upper_limit" jdbcType="DECIMAL" property="upperLimit"/>
        <result column="default_purchase" jdbcType="DECIMAL" property="defaultPurchase"/>
        <result column="way" jdbcType="TINYINT" property="way"/>
        <result column="warehouse_id" jdbcType="BIGINT" property="warehouseId"/>
        <result column="location_id" jdbcType="BIGINT" property="locationId"/>
        <result column="storage_inspect" jdbcType="TINYINT" property="storageInspect"/>
        <result column="storage_inspect_type" jdbcType="TINYINT" property="storageInspectType"/>
        <result column="storage_sampling_plan" jdbcType="TINYINT" property="storageSamplingPlan"/>
        <result column="outbound_inspect" jdbcType="TINYINT" property="outboundInspect"/>
        <result column="pick_split" jdbcType="TINYINT" property="pickSplit"/>
    </resultMap>
    <sql id="Base_Column_List">
        material_attribute_id, material_id, lower_limit, upper_limit, default_purchase, way,
    warehouse_id, location_id, storage_inspect, storage_inspect_type, storage_sampling_plan, 
    outbound_inspect, pick_split
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from si_material_attribute
        where material_attribute_id = #{materialAttributeId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from si_material_attribute
        where material_attribute_id = #{materialAttributeId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.si.MaterialAttributePO" useGeneratedKeys="true"
            keyProperty="materialAttributeId">
        insert into si_material_attribute (material_attribute_id, material_id, lower_limit,
                                           upper_limit, default_purchase, way,
                                           warehouse_id, location_id, storage_inspect,
                                           storage_inspect_type, storage_sampling_plan,
                                           outbound_inspect, pick_split)
        values (#{materialAttributeId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, #{lowerLimit,jdbcType=DECIMAL},
                #{upperLimit,jdbcType=DECIMAL}, #{defaultPurchase,jdbcType=DECIMAL}, #{way,jdbcType=TINYINT},
                #{warehouseId,jdbcType=BIGINT}, #{locationId,jdbcType=BIGINT}, #{storageInspect,jdbcType=TINYINT},
                #{storageInspectType,jdbcType=TINYINT}, #{storageSamplingPlan,jdbcType=TINYINT},
                #{outboundInspect,jdbcType=TINYINT}, #{pickSplit,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.si.MaterialAttributePO">
        insert into si_material_attribute
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="materialAttributeId != null">
                material_attribute_id,
            </if>
            <if test="materialId != null">
                material_id,
            </if>
            <if test="lowerLimit != null">
                lower_limit,
            </if>
            <if test="upperLimit != null">
                upper_limit,
            </if>
            <if test="defaultPurchase != null">
                default_purchase,
            </if>
            <if test="way != null">
                way,
            </if>
            <if test="warehouseId != null">
                warehouse_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
            <if test="storageInspect != null">
                storage_inspect,
            </if>
            <if test="storageInspectType != null">
                storage_inspect_type,
            </if>
            <if test="storageSamplingPlan != null">
                storage_sampling_plan,
            </if>
            <if test="outboundInspect != null">
                outbound_inspect,
            </if>
            <if test="pickSplit != null">
                pick_split,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="materialAttributeId != null">
                #{materialAttributeId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                #{materialId,jdbcType=BIGINT},
            </if>
            <if test="lowerLimit != null">
                #{lowerLimit,jdbcType=DECIMAL},
            </if>
            <if test="upperLimit != null">
                #{upperLimit,jdbcType=DECIMAL},
            </if>
            <if test="defaultPurchase != null">
                #{defaultPurchase,jdbcType=DECIMAL},
            </if>
            <if test="way != null">
                #{way,jdbcType=TINYINT},
            </if>
            <if test="warehouseId != null">
                #{warehouseId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=BIGINT},
            </if>
            <if test="storageInspect != null">
                #{storageInspect,jdbcType=TINYINT},
            </if>
            <if test="storageInspectType != null">
                #{storageInspectType,jdbcType=TINYINT},
            </if>
            <if test="storageSamplingPlan != null">
                #{storageSamplingPlan,jdbcType=TINYINT},
            </if>
            <if test="outboundInspect != null">
                #{outboundInspect,jdbcType=TINYINT},
            </if>
            <if test="pickSplit != null">
                #{pickSplit,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.si.MaterialAttributePO">
        update si_material_attribute
        <set>
            <if test="materialId != null">
                material_id = #{materialId,jdbcType=BIGINT},
            </if>
            <if test="lowerLimit != null">
                lower_limit = #{lowerLimit,jdbcType=DECIMAL},
            </if>
            <if test="upperLimit != null">
                upper_limit = #{upperLimit,jdbcType=DECIMAL},
            </if>
            <if test="defaultPurchase != null">
                default_purchase = #{defaultPurchase,jdbcType=DECIMAL},
            </if>
            <if test="way != null">
                way = #{way,jdbcType=TINYINT},
            </if>
            <if test="warehouseId != null">
                warehouse_id = #{warehouseId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=BIGINT},
            </if>
            <if test="storageInspect != null">
                storage_inspect = #{storageInspect,jdbcType=TINYINT},
            </if>
            <if test="storageInspectType != null">
                storage_inspect_type = #{storageInspectType,jdbcType=TINYINT},
            </if>
            <if test="storageSamplingPlan != null">
                storage_sampling_plan = #{storageSamplingPlan,jdbcType=TINYINT},
            </if>
            <if test="outboundInspect != null">
                outbound_inspect = #{outboundInspect,jdbcType=TINYINT},
            </if>
            <if test="pickSplit != null">
                pick_split = #{pickSplit,jdbcType=TINYINT},
            </if>
        </set>
        where material_attribute_id = #{materialAttributeId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.si.MaterialAttributePO">
        update si_material_attribute
        set material_id           = #{materialId,jdbcType=BIGINT},
            lower_limit           = #{lowerLimit,jdbcType=DECIMAL},
            upper_limit           = #{upperLimit,jdbcType=DECIMAL},
            default_purchase      = #{defaultPurchase,jdbcType=DECIMAL},
            way                   = #{way,jdbcType=TINYINT},
            warehouse_id          = #{warehouseId,jdbcType=BIGINT},
            location_id           = #{locationId,jdbcType=BIGINT},
            storage_inspect       = #{storageInspect,jdbcType=TINYINT},
            storage_inspect_type  = #{storageInspectType,jdbcType=TINYINT},
            storage_sampling_plan = #{storageSamplingPlan,jdbcType=TINYINT},
            outbound_inspect      = #{outboundInspect,jdbcType=TINYINT},
            pick_split            = #{pickSplit,jdbcType=TINYINT}
        where material_attribute_id = #{materialAttributeId,jdbcType=BIGINT}
    </update>

    <resultMap id="BOResultMap" type="com.smartindustry.common.bo.si.MaterialAttributeBO" extends="BaseResultMap">
        <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
        <result column="location_name" jdbcType="CHAR" property="locationName"/>
    </resultMap>
    <sql id="BO_Column_List">
        ma.material_attribute_id, ma.lower_limit, ma.upper_limit, ma.default_purchase, ma.way, ma.warehouse_id,
    ma.location_id, ma.storage_inspect, ma.storage_inspect_type, ma.storage_sampling_plan, ma.outbound_inspect,
    ma.pick_split,
    w.warehouse_name, l.location_name
    </sql>
    <select id="detail" parameterType="java.lang.Long" resultMap="BOResultMap">
        select
        <include refid="BO_Column_List"/>
        from si_material_attribute ma
        left join si_warehouse w on ma.warehouse_id = w.warehouse_id
        left join si_location l on ma.location_id = l.location_id
        where ma.material_id = #{mid,jdbcType=BIGINT}
    </select>

    <select id="queryByMid" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from si_material_attribute
        where material_id = #{mid,jdbcType=BIGINT}
    </select>
</mapper>