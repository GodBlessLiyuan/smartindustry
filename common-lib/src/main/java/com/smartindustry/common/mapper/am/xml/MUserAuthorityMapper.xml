<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.am.MUserAuthorityMapper">
  <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.am.MUserAuthorityPO">
    <id column="user_authority_id" jdbcType="BIGINT" property="userAuthorityId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="authority_id" jdbcType="BIGINT" property="authorityId" />
  </resultMap>
  <sql id="Base_Column_List">
    user_authority_id, user_id, authority_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from am_m_user_authority
    where user_authority_id = #{userAuthorityId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from am_m_user_authority
    where user_authority_id = #{userAuthorityId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smartindustry.common.pojo.am.MUserAuthorityPO">
    insert into am_m_user_authority (user_authority_id, user_id, authority_id
      )
    values (#{userAuthorityId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{authorityId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.am.MUserAuthorityPO">
    insert into am_m_user_authority
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userAuthorityId != null">
        user_authority_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="authorityId != null">
        authority_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userAuthorityId != null">
        #{userAuthorityId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="authorityId != null">
        #{authorityId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.am.MUserAuthorityPO">
    update am_m_user_authority
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="authorityId != null">
        authority_id = #{authorityId,jdbcType=BIGINT},
      </if>
    </set>
    where user_authority_id = #{userAuthorityId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.am.MUserAuthorityPO">
    update am_m_user_authority
    set user_id = #{userId,jdbcType=BIGINT},
      authority_id = #{authorityId,jdbcType=BIGINT}
    where user_authority_id = #{userAuthorityId,jdbcType=BIGINT}
  </update>

  <!--  根据parentId父节点找到当前用户所有的子节点-->
  <select id="queryTreeById" parameterType="java.lang.Long" resultType="com.smartindustry.common.bo.am.UserAuthorityBO">
    select mua.user_id as userId,mua.authority_id as authorityId,mua.authority_name as authorityName,au.type as type
    from am_m_user_authority mua
    left join am_authority au on mua.authority_id = au.authority_id
    where mua.user_id = #{userId,jdbcType=BIGINT} and au.parent_id= #{parentId,jdbcType=BIGINT}
  </select>


  <!--  先根据用户id删除所有该用户的权限id-->
  <delete id="deleteByUserId" parameterType="java.lang.Long">
    delete from  am_m_user_authority  where user_id in
    <foreach collection="list" item="uid" open="(" separator="," close=")">
      #{uid,jdbcType=BIGINT}
    </foreach>
  </delete>

  <!--  根据userId和权限id批量更新用户权限中间表-->
  <insert id="insertBatch">
    insert into am_m_user_authority(user_id,authority_id)values
    <foreach collection="uids" item="uid" separator=",">
       <foreach collection="perms" item="perm" separator=",">
         (
           #{uid,jdbcType=BIGINT},
           #{perm,jdbcType=BIGINT}
         )
       </foreach>
    </foreach>
  </insert>
</mapper>