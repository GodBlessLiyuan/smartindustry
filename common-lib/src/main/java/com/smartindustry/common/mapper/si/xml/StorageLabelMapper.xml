<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.si.StorageLabelMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.si.StorageLabelPO">
        <id column="storage_label_id" jdbcType="BIGINT" property="storageLabelId"/>
        <result column="print_label_id" jdbcType="BIGINT" property="printLabelId"/>
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="location_id" jdbcType="BIGINT" property="locationId"/>
        <result column="package_id" jdbcType="CHAR" property="packageId"/>
        <result column="order_no" jdbcType="CHAR" property="orderNo"/>
        <result column="order_type" jdbcType="TINYINT" property="orderType"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="storage_num" jdbcType="INTEGER" property="storageNum"/>
        <result column="storage_time" jdbcType="TIMESTAMP" property="storageTime"/>
        <result column="material_lock_id" jdbcType="BIGINT" property="materialLockId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        storage_label_id, print_label_id, material_id, location_id, package_id, order_no,
    order_type, `type`, storage_num, storage_time, material_lock_id, `status`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from si_storage_label
        where storage_label_id = #{storageLabelId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from si_storage_label
        where storage_label_id = #{storageLabelId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.si.StorageLabelPO">
        insert into si_storage_label (storage_label_id, print_label_id, material_id,
                                      location_id, package_id, order_no,
                                      order_type, `type`, storage_num,
                                      storage_time, material_lock_id, `status`)
        values (#{storageLabelId,jdbcType=BIGINT}, #{printLabelId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT},
                #{locationId,jdbcType=BIGINT}, #{packageId,jdbcType=CHAR}, #{orderNo,jdbcType=CHAR},
                #{orderType,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{storageNum,jdbcType=INTEGER},
                #{storageTime,jdbcType=TIMESTAMP}, #{materialLockId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.si.StorageLabelPO">
        insert into si_storage_label
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storageLabelId != null">
                storage_label_id,
            </if>
            <if test="printLabelId != null">
                print_label_id,
            </if>
            <if test="materialId != null">
                material_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
            <if test="packageId != null">
                package_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="storageNum != null">
                storage_num,
            </if>
            <if test="storageTime != null">
                storage_time,
            </if>
            <if test="materialLockId != null">
                material_lock_id,
            </if>
            <if test="status != null">
                `status`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storageLabelId != null">
                #{storageLabelId,jdbcType=BIGINT},
            </if>
            <if test="printLabelId != null">
                #{printLabelId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                #{materialId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=BIGINT},
            </if>
            <if test="packageId != null">
                #{packageId,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="storageNum != null">
                #{storageNum,jdbcType=INTEGER},
            </if>
            <if test="storageTime != null">
                #{storageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="materialLockId != null">
                #{materialLockId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.si.StorageLabelPO">
        update si_storage_label
        <set>
            <if test="printLabelId != null">
                print_label_id = #{printLabelId,jdbcType=BIGINT},
            </if>
            <if test="materialId != null">
                material_id = #{materialId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=BIGINT},
            </if>
            <if test="packageId != null">
                package_id = #{packageId,jdbcType=CHAR},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="storageNum != null">
                storage_num = #{storageNum,jdbcType=INTEGER},
            </if>
            <if test="storageTime != null">
                storage_time = #{storageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="materialLockId != null">
                material_lock_id = #{materialLockId,jdbcType=BIGINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where storage_label_id = #{storageLabelId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.si.StorageLabelPO">
        update si_storage_label
        set print_label_id   = #{printLabelId,jdbcType=BIGINT},
            material_id      = #{materialId,jdbcType=BIGINT},
            location_id      = #{locationId,jdbcType=BIGINT},
            package_id       = #{packageId,jdbcType=CHAR},
            order_no         = #{orderNo,jdbcType=CHAR},
            order_type       = #{orderType,jdbcType=TINYINT},
            `type`           = #{type,jdbcType=TINYINT},
            storage_num      = #{storageNum,jdbcType=INTEGER},
            storage_time     = #{storageTime,jdbcType=TIMESTAMP},
            material_lock_id = #{materialLockId,jdbcType=BIGINT},
            `status`         = #{status,jdbcType=TINYINT}
        where storage_label_id = #{storageLabelId,jdbcType=BIGINT}
    </update>

    <select id="queryByLids" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from si_storage_label
        where location_id in
        <foreach collection="list" item="lid" open="(" separator="," close=")">
            #{lid,jdbcType=BIGINT}
        </foreach>
    </select>

    <resultMap id="BOResultMap" type="com.smartindustry.common.bo.si.StorageLabelBO" extends="BaseResultMap">
        <result column="location_no" jdbcType="CHAR" property="locationNo"/>
    </resultMap>
    <sql id="BO_Column_List">
        sl.storage_label_id, sl.print_label_id, sl.material_id, sl.location_id, sl.package_id, sl.order_no,
    sl.order_type, sl.`type`, sl.storage_num, sl.storage_time, sl.material_lock_id, sl.`status`
    l.location_no
    </sql>
    <select id="queryNotRecommend" resultMap="BOResultMap">
        select
        <include refid="BO_Column_List"/>
        from si_storage_label sl
        left join si_location l on sl.location_id = l.location_id
        where sl.order_no = #{orderNo,jdbcType=CHAR} and sl.material_id = #{materialId,jdbcType=BIGINT} and type = 1 and
        storage_label_id not
        in (
        select storage_label_id from om_label_recommend
        )
    </select>
    <insert id="batchInsert" parameterType="java.util.List">
        insert into si_storage_label (storage_label_id, print_label_id, material_id,
        location_id, package_id, order_no,
        order_type, `type`, storage_num,
        storage_time, material_lock_id, `status`)
        values
        <foreach collection="list" separator="," item="po">
            (#{po.storageLabelId,jdbcType=BIGINT}, #{po.printLabelId,jdbcType=BIGINT}, #{po.materialId,jdbcType=BIGINT},
            #{po.locationId,jdbcType=BIGINT}, #{po.packageId,jdbcType=CHAR}, #{po.orderNo,jdbcType=CHAR},
            #{po.orderType,jdbcType=TINYINT}, #{po.type,jdbcType=TINYINT}, #{po.storageNum,jdbcType=INTEGER},
            #{po.storageTime,jdbcType=TIMESTAMP}, #{po.materialLockId,jdbcType=BIGINT}, #{po.status,jdbcType=TINYINT})
        </foreach>
    </insert>
    <delete id="deleteByPlids" parameterType="java.util.List">
        delete
        from si_storage_label
        where print_label_id in
        <foreach collection="list" item="plId" separator="," open="(" close=")">
            #{plId,jdbcType=BIGINT}
        </foreach>
    </delete>
</mapper>