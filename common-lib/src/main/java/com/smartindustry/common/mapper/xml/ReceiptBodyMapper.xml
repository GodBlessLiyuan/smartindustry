<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.ReceiptBodyMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.ReceiptBodyPO">
        <id column="receipt_body_id" jdbcType="BIGINT" property="receiptBodyId"/>
        <result column="receipt_head_id" jdbcType="BIGINT" property="receiptHeadId"/>
        <result column="order_no" jdbcType="CHAR" property="orderNo"/>
        <result column="order_type" jdbcType="TINYINT" property="orderType"/>
        <result column="receipt_no" jdbcType="CHAR" property="receiptNo"/>
        <result column="material_no" jdbcType="CHAR" property="materialNo"/>
        <result column="order_total" jdbcType="INTEGER" property="orderTotal"/>
        <result column="accept_num" jdbcType="INTEGER" property="acceptNum"/>
        <result column="accept_date" jdbcType="DATE" property="acceptDate"/>
        <result column="good_num" jdbcType="INTEGER" property="goodNum"/>
        <result column="bad_num" jdbcType="INTEGER" property="badNum"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        receipt_body_id, receipt_head_id, order_no, order_type, receipt_no, material_no,
    order_total, accept_num, accept_date, good_num, bad_num, stock_num, `status`, create_time, 
    dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT} and dr = 1
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Long">
        update sm_receipt_body
        set dr = 2
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </update>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.ReceiptBodyPO">
        insert into sm_receipt_body (receipt_body_id, receipt_head_id, order_no,
                                     order_type, receipt_no, material_no,
                                     order_total, accept_num, accept_date,
                                     good_num, bad_num, stock_num,
                                     `status`, create_time, dr)
        values (#{receiptBodyId,jdbcType=BIGINT}, #{receiptHeadId,jdbcType=BIGINT}, #{orderNo,jdbcType=CHAR},
                #{orderType,jdbcType=TINYINT}, #{receiptNo,jdbcType=CHAR}, #{materialNo,jdbcType=CHAR},
                #{orderTotal,jdbcType=INTEGER}, #{acceptNum,jdbcType=INTEGER}, #{acceptDate,jdbcType=DATE},
                #{goodNum,jdbcType=INTEGER}, #{badNum,jdbcType=INTEGER}, #{stockNum,jdbcType=INTEGER},
                #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.ReceiptBodyPO">
        insert into sm_receipt_body
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="receiptBodyId != null">
                receipt_body_id,
            </if>
            <if test="receiptHeadId != null">
                receipt_head_id,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="receiptNo != null">
                receipt_no,
            </if>
            <if test="materialNo != null">
                material_no,
            </if>
            <if test="orderTotal != null">
                order_total,
            </if>
            <if test="acceptNum != null">
                accept_num,
            </if>
            <if test="acceptDate != null">
                accept_date,
            </if>
            <if test="goodNum != null">
                good_num,
            </if>
            <if test="badNum != null">
                bad_num,
            </if>
            <if test="stockNum != null">
                stock_num,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="receiptBodyId != null">
                #{receiptBodyId,jdbcType=BIGINT},
            </if>
            <if test="receiptHeadId != null">
                #{receiptHeadId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=TINYINT},
            </if>
            <if test="receiptNo != null">
                #{receiptNo,jdbcType=CHAR},
            </if>
            <if test="materialNo != null">
                #{materialNo,jdbcType=CHAR},
            </if>
            <if test="orderTotal != null">
                #{orderTotal,jdbcType=INTEGER},
            </if>
            <if test="acceptNum != null">
                #{acceptNum,jdbcType=INTEGER},
            </if>
            <if test="acceptDate != null">
                #{acceptDate,jdbcType=DATE},
            </if>
            <if test="goodNum != null">
                #{goodNum,jdbcType=INTEGER},
            </if>
            <if test="badNum != null">
                #{badNum,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.ReceiptBodyPO">
        update sm_receipt_body
        <set>
            <if test="receiptHeadId != null">
                receipt_head_id = #{receiptHeadId,jdbcType=BIGINT},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=CHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=TINYINT},
            </if>
            <if test="receiptNo != null">
                receipt_no = #{receiptNo,jdbcType=CHAR},
            </if>
            <if test="materialNo != null">
                material_no = #{materialNo,jdbcType=CHAR},
            </if>
            <if test="orderTotal != null">
                order_total = #{orderTotal,jdbcType=INTEGER},
            </if>
            <if test="acceptNum != null">
                accept_num = #{acceptNum,jdbcType=INTEGER},
            </if>
            <if test="acceptDate != null">
                accept_date = #{acceptDate,jdbcType=DATE},
            </if>
            <if test="goodNum != null">
                good_num = #{goodNum,jdbcType=INTEGER},
            </if>
            <if test="badNum != null">
                bad_num = #{badNum,jdbcType=INTEGER},
            </if>
            <if test="stockNum != null">
                stock_num = #{stockNum,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.ReceiptBodyPO">
        update sm_receipt_body
        set receipt_head_id = #{receiptHeadId,jdbcType=BIGINT},
            order_no        = #{orderNo,jdbcType=CHAR},
            order_type      = #{orderType,jdbcType=TINYINT},
            receipt_no      = #{receiptNo,jdbcType=CHAR},
            material_no     = #{materialNo,jdbcType=CHAR},
            order_total     = #{orderTotal,jdbcType=INTEGER},
            accept_num      = #{acceptNum,jdbcType=INTEGER},
            accept_date     = #{acceptDate,jdbcType=DATE},
            good_num        = #{goodNum,jdbcType=INTEGER},
            bad_num         = #{badNum,jdbcType=INTEGER},
            stock_num       = #{stockNum,jdbcType=INTEGER},
            `status`        = #{status,jdbcType=TINYINT},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            dr              = #{dr,jdbcType=TINYINT}
        where receipt_body_id = #{receiptBodyId,jdbcType=BIGINT}
    </update>

    <sql id="ReceiptBodyBO_Column_List">
        receipt_body_id, rb.receipt_head_id, rb.order_no, rb.order_type, receipt_no, rb.material_no, order_total, accept_num,
    accept_date, good_num, bad_num, stock_num, `status`, rb.create_time, rb.dr, material_name, material_type, material_model, material_desc, test_type
    </sql>
    <sql id="ReceiptBO_Column_List">
        rb.receipt_body_id, rb.receipt_head_id, rb.order_no, rb.order_type, receipt_no, rb.material_no, order_total, accept_num,
    accept_date, good_num, bad_num, stock_num, rb.`status`, material_name, material_type, material_model, material_desc, test_type,
    rh.order_date, rh.supplier, rh.buyer, rh.plan_date, rh.logistics_company, rh.logistics_no, rh.receipt_way, rh.remark
    </sql>
    <resultMap id="ReceiptBodyBOResultMap" type="com.smartindustry.common.bo.ReceiptBodyBO" extends="BaseResultMap">
        <result column="material_name" jdbcType="CHAR" property="materialName"/>
        <result column="material_type" jdbcType="TINYINT" property="materialType"/>
        <result column="material_model" jdbcType="CHAR" property="materialModel"/>
        <result column="material_desc" jdbcType="CHAR" property="materialDesc"/>
        <result column="test_type" jdbcType="TINYINT" property="testType"/>
    </resultMap>
    <resultMap id="ReceiptBOResultMap" type="com.smartindustry.common.bo.ReceiptBO" extends="ReceiptBodyBOResultMap">
        <result column="order_date" jdbcType="DATE" property="orderDate"/>
        <result column="supplier" jdbcType="CHAR" property="supplier"/>
        <result column="buyer" jdbcType="CHAR" property="buyer"/>
        <result column="plan_date" jdbcType="DATE" property="planDate"/>
        <result column="logistics_company" jdbcType="CHAR" property="logisticsCompany"/>
        <result column="logistics_no" jdbcType="CHAR" property="logisticsNo"/>
        <result column="receipt_way" jdbcType="TINYINT" property="receiptWay"/>
        <result column="remark" jdbcType="CHAR" property="remark"/>
        <result column="qaStatus" jdbcType="CHAR" property="qaStatus"/>
    </resultMap>
    <select id="pageQuery" resultMap="ReceiptBOResultMap">
        select
        <include refid="ReceiptBO_Column_List"/>
        <if test="qa">
            , q.status as qaStatus
        </if>
        from sm_receipt_body rb
        left join sm_material m on rb.material_no = m.material_no
        left join sm_receipt_head rh on rb.receipt_head_id = rh.receipt_head_id
        <if test="qa">
            <choose>
                <when test="status == 5">
                    left join sm_iqc_detect q on rb.receipt_body_id = q.receipt_body_id
                </when>
                <when test="status == 10">
                    left join sm_qe_detect q on rb.receipt_body_id = q.receipt_body_id
                </when>
                <when test="status == 15">
                    left join sm_qe_confirm q on rb.receipt_body_id = q.receipt_body_id
                </when>
            </choose>
        </if>
        where rh.dr = 1 and rb.dr = 1
        <if test="keyword != null and keyword != ''">and (rb.material_no like '%' #{keyword,jdbcType=CHAR} '%' or
            m.material_desc like '%' #{keyword,jdbcType=CHAR} '%')
        </if>
        <if test="supplier != null and supplier != ''">and rh.supplier like '%' #{supplier,jdbcType=CHAR} '%'</if>
        <if test="ono != null and ono != ''">and rh.order_no like '%' #{ono,jdbcType=CHAR} '%'</if>
        <if test="status != null and status != 0">and rb.`status` = #{status,jdbcType=TINYINT}</if>
        <if test="type != null and type != 0">and rh.order_type = #{type,jdbcType=TINYINT}</if>
        <if test="rno != null and rno != ''">and rb.receipt_no like '%' #{rno,jdbcType=CHAR} '%'</if>
        <if test="qa and qaStatus != null and qaStatus != 0">and q.status = #{qaStatus,jdbcType=TINYINT}</if>
    </select>
    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="receiptBodyId">
        insert into sm_receipt_body (receipt_body_id, receipt_head_id, order_no,
        order_type, receipt_no, material_no,
        order_total, accept_num, accept_date,
        good_num, bad_num, stock_num,
        `status`, create_time, dr)
        values
        <foreach collection="list" item="bo" separator=",">
            (#{bo.receiptBodyId,jdbcType=BIGINT}, #{bo.receiptHeadId,jdbcType=BIGINT}, #{bo.orderNo,jdbcType=CHAR},
            #{bo.orderType,jdbcType=TINYINT}, #{bo.receiptNo,jdbcType=CHAR}, #{bo.materialNo,jdbcType=CHAR},
            #{bo.orderTotal,jdbcType=INTEGER}, #{bo.acceptNum,jdbcType=INTEGER}, #{bo.acceptDate,jdbcType=DATE},
            #{bo.goodNum,jdbcType=INTEGER}, #{bo.badNum,jdbcType=INTEGER}, #{bo.stockNum,jdbcType=INTEGER},
            #{bo.status,jdbcType=TINYINT}, #{bo.createTime,jdbcType=TIMESTAMP}, #{bo.dr,jdbcType=TINYINT})
        </foreach>
    </insert>
    <select id="queryNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_no like #{no,jdbcType=CHAR} '%'
        order by receipt_body_id desc limit 1
    </select>
    <update id="batchDelete" parameterType="java.util.List">
        update sm_receipt_body set dr = 2
        where receipt_body_id in (
        <foreach collection="list" separator="," item="rbId">
            #{rbId,jdbcType=BIGINT}
        </foreach>)
    </update>
    <select id="queryHeadIds" parameterType="java.util.List" resultType="java.lang.Long">
        select distinct receipt_head_id
        from sm_receipt_body
        where receipt_body_id in (
        <foreach collection="list" separator="," item="rbId">
            #{rbId,jdbcType=BIGINT}
        </foreach>
        )
    </select>
    <select id="queryByHeadId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_receipt_body
        where receipt_head_id = #{receiptHeadId,jdbcType=BIGINT} and dr = 1
    </select>
    <select id="queryByBodyId" parameterType="java.lang.Long" resultMap="ReceiptBodyBOResultMap">
        select
        <include refid="ReceiptBodyBO_Column_List"/>
        from sm_receipt_body rb
        left join sm_material m on rb.material_no = m.material_no
        where rb.receipt_body_id = #{rbId,jdbcType=BIGINT} and rb.dr = 1
    </select>
</mapper>