<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.sm.StorageGroupMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.sm.StorageGroupPO">
        <id column="storage_group_id" jdbcType="BIGINT" property="storageGroupId"/>
        <result column="storage_id" jdbcType="BIGINT" property="storageId"/>
        <result column="location_id" jdbcType="BIGINT" property="locationId"/>
    </resultMap>
    <sql id="Base_Column_List">
        storage_group_id, storage_id, location_id
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_storage_group
        where storage_group_id = #{storageGroupId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sm_storage_group
        where storage_group_id = #{storageGroupId,jdbcType=BIGINT}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.List">
        delete from sm_storage_group where storage_group_id in
        <foreach collection="list" item="sgid" open="(" separator="," close=")">
            #{sgid, jdbcType=BIGINT}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.smartindustry.common.pojo.sm.StorageGroupPO" useGeneratedKeys="true"
            keyProperty="storageGroupId">
        insert into sm_storage_group (storage_group_id, storage_id, location_id)
        values (#{storageGroupId,jdbcType=BIGINT}, #{storageId,jdbcType=BIGINT}, #{locationId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.sm.StorageGroupPO">
        insert into sm_storage_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storageGroupId != null">
                storage_group_id,
            </if>
            <if test="storageId != null">
                storage_id,
            </if>
            <if test="locationId != null">
                location_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storageGroupId != null">
                #{storageGroupId,jdbcType=BIGINT},
            </if>
            <if test="storageId != null">
                #{storageId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                #{locationId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.sm.StorageGroupPO">
        update sm_storage_group
        <set>
            <if test="storageId != null">
                storage_id = #{storageId,jdbcType=BIGINT},
            </if>
            <if test="locationId != null">
                location_id = #{locationId,jdbcType=BIGINT},
            </if>
        </set>
        where storage_group_id = #{storageGroupId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.sm.StorageGroupPO">
        update sm_storage_group
        set storage_id  = #{storageId,jdbcType=BIGINT},
            location_id = #{locationId,jdbcType=BIGINT}
        where storage_group_id = #{storageGroupId,jdbcType=BIGINT}
    </update>

    <resultMap id="GroupBOResultMap" type="com.smartindustry.common.bo.sm.StorageGroupBO" extends="BaseResultMap">
        <result column="location_no" jdbcType="CHAR" property="locationNo"/>
        <result column="warehouse_id" jdbcType="BIGINT" property="warehouseId"/>
        <collection property="detail" column="storage_detail_id"
                    ofType="com.smartindustry.common.bo.sm.StorageDetailBO">
            <id column="storage_detail_id" jdbcType="BIGINT" property="storageDetailId"/>
            <result column="print_label_id" jdbcType="BIGINT" property="printLabelId"/>
            <result column="package_id" jdbcType="CHAR" property="packageId"/>
            <result column="material_id" jdbcType="BIGINT" property="materialId"/>
            <result column="material_no" jdbcType="CHAR" property="materialNo"/>
            <result column="material_name" jdbcType="CHAR" property="materialName"/>
            <result column="material_desc" jdbcType="CHAR" property="materialDesc"/>
            <result column="measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
            <result column="num" jdbcType="INTEGER" property="num"/>
        </collection>
    </resultMap>
    <select id="queryBySid" parameterType="java.lang.Long" resultMap="GroupBOResultMap">
        select sg.storage_group_id,
               sg.location_id,
               sd.storage_detail_id,
               pl.print_label_id,
               pl.package_id,
               pl.num,
               l.location_no,
               l.warehouse_id,
               m.material_id,
               m.material_no,
               m.material_desc,
               m.material_name,
               me.measure_unit_name
        from sm_storage_group sg
                 left join sm_storage_detail sd on sg.storage_group_id = sd.storage_group_id
                 left join si_print_label pl on sd.print_label_id = pl.print_label_id
                 left join si_material m on pl.material_id = m.material_id
                 left join si_location l on sg.location_id = l.location_id
                 left join dd_measure_unit me on me.measure_unit_id = m.measure_unit_id
        where sg.storage_id = #{storageId,jdbcType=BIGINT}
        order by sg.storage_group_id desc, sd.storage_detail_id desc
    </select>

    <!--    根据入库单id查询入库单详情表-->
    <select id="queryGroup" parameterType="java.lang.Long" resultType="java.lang.Long">
        select storage_group_id
        from sm_storage_group
        where storage_id = #{storageId,jdbcType=BIGINT} limit 1
    </select>

    <resultMap id="GroupDetailBOResultMap" type="com.smartindustry.common.bo.sm.StorageGroupDetailBO"
               extends="BaseResultMap">
        <result column="material_id" jdbcType="BIGINT" property="materialId"/>
        <result column="material_no" jdbcType="CHAR" property="materialNo"/>
        <result column="material_name" jdbcType="CHAR" property="materialName"/>
        <result column = "measure_unit_name" jdbcType="CHAR" property="measureUnitName"/>
        <collection property="detail" column="storage_detail_id"
                    ofType="com.smartindustry.common.bo.sm.StorageDetailBO">
            <id column="storage_detail_id" jdbcType="BIGINT" property="storageDetailId"/>
            <result column="print_label_id" jdbcType="BIGINT" property="printLabelId"/>
            <result column="package_id" jdbcType="CHAR" property="packageId"/>
            <result column="location_no" jdbcType="CHAR" property="locationNo"/>
            <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
            <result column="num" jdbcType="INTEGER" property="num"/>
        </collection>
    </resultMap>
    <select id="queryStorageDetail" resultMap="GroupDetailBOResultMap">
        select sg.storage_group_id,
        sg.location_id,
        sd.storage_detail_id,
        pl.print_label_id,
        pl.package_id,
        pl.num,
        l.location_no,
        m.material_id,
        m.material_no,
        m.material_desc,
        m.material_name,
        w.warehouse_name,
        me.measure_unit_name
        from sm_storage_group sg
        left join sm_storage_detail sd on sg.storage_group_id = sd.storage_group_id
        left join si_print_label pl on sd.print_label_id = pl.print_label_id
        left join si_material m on pl.material_id = m.material_id
        left join si_location l on sg.location_id = l.location_id
        left join dd_measure_unit me on me.measure_unit_id  = m.measure_unit_id
        LEFT JOIN si_warehouse w ON w.warehouse_id = l.warehouse_id
        where sg.storage_id = #{storageId, jdbcType=BIGINT}
        <if test="storageGroupId == null">
            and sg.location_id is not null
        </if>
        <if test="storageGroupId != null">
            and sg.storage_group_id = #{storageGroupId, jdbcType=BIGINT}
        </if>
        order by sg.storage_group_id desc, sd.storage_detail_id desc
    </select>
</mapper>