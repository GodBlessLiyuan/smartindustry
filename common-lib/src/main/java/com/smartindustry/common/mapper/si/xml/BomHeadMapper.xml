<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.si.BomHeadMapper">
  <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.si.BomHeadPO">
    <id column="bom_head_id" jdbcType="BIGINT" property="bomHeadId" />
    <result column="material_id" jdbcType="BIGINT" property="materialId" />
    <result column="relate_num" jdbcType="INTEGER" property="relateNum" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="dr" jdbcType="TINYINT" property="dr" />
  </resultMap>
  <sql id="Base_Column_List">
    bom_head_id, material_id, relate_num, user_id, create_time, update_time, dr
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from si_bom_head
    where bom_head_id = #{bomHeadId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from si_bom_head
    where bom_head_id = #{bomHeadId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smartindustry.common.pojo.si.BomHeadPO">
    insert into si_bom_head (bom_head_id, material_id, relate_num, 
      user_id, create_time, update_time, 
      dr)
    values (#{bomHeadId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, #{relateNum,jdbcType=INTEGER}, 
      #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{dr,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.si.BomHeadPO">
    insert into si_bom_head
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bomHeadId != null">
        bom_head_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="relateNum != null">
        relate_num,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="dr != null">
        dr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bomHeadId != null">
        #{bomHeadId,jdbcType=BIGINT},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="relateNum != null">
        #{relateNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null">
        #{dr,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.si.BomHeadPO">
    update si_bom_head
    <set>
      <if test="materialId != null">
        material_id = #{materialId,jdbcType=BIGINT},
      </if>
      <if test="relateNum != null">
        relate_num = #{relateNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null">
        dr = #{dr,jdbcType=TINYINT},
      </if>
    </set>
    where bom_head_id = #{bomHeadId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.si.BomHeadPO">
    update si_bom_head
    set material_id = #{materialId,jdbcType=BIGINT},
      relate_num = #{relateNum,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT}
    where bom_head_id = #{bomHeadId,jdbcType=BIGINT}
  </update>
</mapper>