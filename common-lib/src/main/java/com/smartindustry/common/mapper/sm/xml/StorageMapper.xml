<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.sm.StorageMapper">
    <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.sm.StoragePO">
        <id column="storage_id" jdbcType="BIGINT" property="storageId"/>
        <result column="storage_no" jdbcType="CHAR" property="storageNo"/>
        <result column="source_no" jdbcType="CHAR" property="sourceNo"/>
        <result column="source_type" jdbcType="TINYINT" property="sourceType"/>
        <result column="pending_num" jdbcType="INTEGER" property="pendingNum"/>
        <result column="stored_num" jdbcType="INTEGER" property="storedNum"/>
        <result column="storage_time" jdbcType="TIMESTAMP" property="storageTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="dr" jdbcType="TINYINT" property="dr"/>
    </resultMap>
    <sql id="Base_Column_List">
        storage_id, storage_no, source_no, source_type, pending_num, stored_num, storage_time,
    `status`, `type`, create_time, dr
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_storage
        where storage_id = #{storageId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sm_storage
        where storage_id = #{storageId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.smartindustry.common.pojo.sm.StoragePO" useGeneratedKeys="true"
            keyProperty="storageId">
        insert into sm_storage (storage_id, storage_no, source_no,
                                source_type, pending_num, stored_num,
                                storage_time, `status`, `type`,
                                create_time, dr)
        values (#{storageId,jdbcType=BIGINT}, #{storageNo,jdbcType=CHAR}, #{sourceNo,jdbcType=CHAR},
                #{sourceType,jdbcType=TINYINT}, #{pendingNum,jdbcType=INTEGER}, #{storedNum,jdbcType=INTEGER},
                #{storageTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP}, #{dr,jdbcType=TINYINT})
    </insert>
    <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.sm.StoragePO">
        insert into sm_storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="storageId != null">
                storage_id,
            </if>
            <if test="storageNo != null">
                storage_no,
            </if>
            <if test="sourceNo != null">
                source_no,
            </if>
            <if test="sourceType != null">
                source_type,
            </if>
            <if test="pendingNum != null">
                pending_num,
            </if>
            <if test="storedNum != null">
                stored_num,
            </if>
            <if test="storageTime != null">
                storage_time,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="type != null">
                `type`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="dr != null">
                dr,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="storageId != null">
                #{storageId,jdbcType=BIGINT},
            </if>
            <if test="storageNo != null">
                #{storageNo,jdbcType=CHAR},
            </if>
            <if test="sourceNo != null">
                #{sourceNo,jdbcType=CHAR},
            </if>
            <if test="sourceType != null">
                #{sourceType,jdbcType=TINYINT},
            </if>
            <if test="pendingNum != null">
                #{pendingNum,jdbcType=INTEGER},
            </if>
            <if test="storedNum != null">
                #{storedNum,jdbcType=INTEGER},
            </if>
            <if test="storageTime != null">
                #{storageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                #{dr,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.sm.StoragePO">
        update sm_storage
        <set>
            <if test="storageNo != null">
                storage_no = #{storageNo,jdbcType=CHAR},
            </if>
            <if test="sourceNo != null">
                source_no = #{sourceNo,jdbcType=CHAR},
            </if>
            <if test="sourceType != null">
                source_type = #{sourceType,jdbcType=TINYINT},
            </if>
            <if test="pendingNum != null">
                pending_num = #{pendingNum,jdbcType=INTEGER},
            </if>
            <if test="storedNum != null">
                stored_num = #{storedNum,jdbcType=INTEGER},
            </if>
            <if test="storageTime != null">
                storage_time = #{storageTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="type != null">
                `type` = #{type,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dr != null">
                dr = #{dr,jdbcType=TINYINT},
            </if>
        </set>
        where storage_id = #{storageId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.sm.StoragePO">
        update sm_storage
        set storage_no   = #{storageNo,jdbcType=CHAR},
            source_no    = #{sourceNo,jdbcType=CHAR},
            source_type  = #{sourceType,jdbcType=TINYINT},
            pending_num  = #{pendingNum,jdbcType=INTEGER},
            stored_num   = #{storedNum,jdbcType=INTEGER},
            storage_time = #{storageTime,jdbcType=TIMESTAMP},
            `status`     = #{status,jdbcType=TINYINT},
            `type`       = #{type,jdbcType=TINYINT},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            dr           = #{dr,jdbcType=TINYINT}
        where storage_id = #{storageId,jdbcType=BIGINT}
    </update>

    <sql id="StorageBO_Column_List">
        s.storage_id, s.storage_no, s.source_no, s.source_type, s.pending_num, s.stored_num, s.storage_time, s.`status`,
    s.`type`, s.create_time, s.dr,
    rb.receipt_body_id, rb.receipt_no, rb.source_no, rb.source_type,
    w.warehouse_name
    </sql>
    <resultMap id="BOResultMap" type="com.smartindustry.common.bo.sm.StorageBO" extends="BaseResultMap">
        <result column="receipt_body_id" jdbcType="BIGINT" property="receiptBodyId"/>
        <result column="receipt_no" jdbcType="CHAR" property="receiptNo"/>
        <result column="source_no" jdbcType="CHAR" property="sourceNo"/>
        <result column="source_type" jdbcType="TINYINT" property="sourceType"/>
        <collection property="locations" ofType="com.smartindustry.common.bo.si.LocationBO">
            <result column="warehouse_name" jdbcType="CHAR" property="warehouseName"/>
        </collection>
    </resultMap>
    <select id="pageQuery" resultMap="BOResultMap">
        select
        <include refid="StorageBO_Column_List"/>
        from sm_storage s
        left join sm_receipt_body rb on s.source_no = rb.receipt_no
        left join sm_storage_group sg on s.storage_id = sg.storage_id
        left join si_location l on sg.location_id = l.location_id
        left join si_warehouse w on l.warehouse_id = w.warehouse_id
        where rb.dr = 1 and s.source_type = 1
        <if test="no != null and no != ''">and (s.storage_no like '%' #{no,jdbcType=CHAR} '%' or rb.receipt_no like '%'
            #{no,jdbcType=CHAR} '%' or rb.source_no like '%' #{no,jdbcType=CHAR} )
        </if>
        <if test="status != null and status != 0">and s.`status` = #{status,jdbcType=TINYINT}</if>
        <if test="wid != null and wid != 0">and w.warehouse_id = #{wid,jdbcType=TINYINT}</if>
        <if test="type == 1">and rb.source_type in (1, 2)</if>
        <if test="type == 3">and rb.source_type = 3</if>
        order by s.create_time desc
    </select>
    <select id="queryNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sm_storage s
        where storage_no like #{no,jdbcType=CHAR} '%'
        order by storage_id desc limit 1
    </select>
    <select id="queryReceiptBySid" parameterType="java.lang.Long" resultMap="BOResultMap">
        select s.storage_id,
               s.storage_no,
               s.source_no,
               s.source_type,
               s.pending_num,
               s.stored_num,
               s.storage_time,
               s.`status`,
               s.`type`,
               s.create_time,
               s.dr,
               rb.receipt_body_id
        from sm_storage s
                 left join sm_receipt_body rb on s.source_no = rb.receipt_no
        where rb.dr = 1
          and s.storage_id = #{storageId,jdbcType=BIGINT}
    </select>
</mapper>