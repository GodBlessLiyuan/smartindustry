<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smartindustry.common.mapper.ds.SalesOutboundMapper">
  <resultMap id="BaseResultMap" type="com.smartindustry.common.pojo.ds.SalesOutboundPO">
    <id column="sales_outbound_id" jdbcType="BIGINT" property="salesOutboundId" />
    <result column="sales_no" jdbcType="CHAR" property="salesNo" />
    <result column="sales_date" jdbcType="DATE" property="salesDate" />
    <result column="client_id" jdbcType="BIGINT" property="clientId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    sales_outbound_id, sales_no, sales_date, client_id, user_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ds_sales_outbound
    where sales_outbound_id = #{salesOutboundId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ds_sales_outbound
    where sales_outbound_id = #{salesOutboundId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.smartindustry.common.pojo.ds.SalesOutboundPO">
    insert into ds_sales_outbound (sales_outbound_id, sales_no, sales_date, 
      client_id, user_id, create_time
      )
    values (#{salesOutboundId,jdbcType=BIGINT}, #{salesNo,jdbcType=CHAR}, #{salesDate,jdbcType=DATE}, 
      #{clientId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smartindustry.common.pojo.ds.SalesOutboundPO">
    insert into ds_sales_outbound
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="salesOutboundId != null">
        sales_outbound_id,
      </if>
      <if test="salesNo != null">
        sales_no,
      </if>
      <if test="salesDate != null">
        sales_date,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="salesOutboundId != null">
        #{salesOutboundId,jdbcType=BIGINT},
      </if>
      <if test="salesNo != null">
        #{salesNo,jdbcType=CHAR},
      </if>
      <if test="salesDate != null">
        #{salesDate,jdbcType=DATE},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smartindustry.common.pojo.ds.SalesOutboundPO">
    update ds_sales_outbound
    <set>
      <if test="salesNo != null">
        sales_no = #{salesNo,jdbcType=CHAR},
      </if>
      <if test="salesDate != null">
        sales_date = #{salesDate,jdbcType=DATE},
      </if>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sales_outbound_id = #{salesOutboundId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smartindustry.common.pojo.ds.SalesOutboundPO">
    update ds_sales_outbound
    set sales_no = #{salesNo,jdbcType=CHAR},
      sales_date = #{salesDate,jdbcType=DATE},
      client_id = #{clientId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where sales_outbound_id = #{salesOutboundId,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="java.util.List" keyProperty="salesOutboundId" useGeneratedKeys="true">
    insert into ds_sales_outbound ( sales_no, sales_date, client_id, user_id,create_time) values
    <foreach collection="list" item = "po" separator=",">
      (  #{po.salesNo,jdbcType=CHAR}, #{po.salesDate,jdbcType=DATE},
      #{po.clientId,jdbcType=BIGINT}, #{po.userId,jdbcType=BIGINT},#{po.createTime, jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <select id="queryBySalesNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from ds_sales_outbound where sales_no = #{salesNo, jdbcType=CHAR}  limit 1
  </select>

  <sql id="BO_Column_List">
        so.sales_outbound_id, so.sales_no, so.sales_date, so.client_id , so.create_time,c.client_name, u.username, so.user_id,     sod.sales_outbound_detail_id, sod.material_id, sod.need_num, sod.unit_price, sod.total_price, m.material_no, m.material_name, so.create_time
  </sql>
  <resultMap id="BOResultMap" type="com.smartindustry.common.bo.ds.SalesOutboundBO" extends="BaseResultMap">
    <result column="client_name" jdbcType="CHAR" property="clientName" />
    <result column="username" jdbcType="CHAR" property="userName" />
    <collection property="details" ofType="com.smartindustry.common.bo.ds.SalesOutboundDetailBO">
      <id column="sales_outbound_detail_id" jdbcType="BIGINT" property="salesOutboundDetailId" />
      <result column="material_id" jdbcType="BIGINT" property="materialId" />
      <result column="need_num" jdbcType="DECIMAL" property="needNum" />
      <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
      <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
      <result column="material_name" jdbcType="CHAR" property="materialName" />
      <result column="material_no" jdbcType="CHAR" property="materialNo" />
    </collection>
  </resultMap>
  <select id="pageQuery" parameterType="java.util.Map" resultMap="BOResultMap">
    select
    <include refid="BO_Column_List"/>
    from ds_sales_outbound so left join
    si_client c on c.client_id = so.client_id
    left join am_user u on u.user_id = so.user_id
    left join ds_sales_outbound_detail sod on sod.sales_outbound_id = so.sales_outbound_id
    left join si_material m on m.material_id = sod.material_id
    <if test="ctime != null">
          where  so.create_time &gt; #{ctime, jdbcType=TIMESTAMP}
    </if>

  </select>
    <select id="queryBySoid" parameterType="java.lang.Long" resultMap="BOResultMap">
      select
      <include refid="BO_Column_List"/>
      from ds_sales_outbound so left join
      si_client c on c.client_id = so.client_id
      left join am_user u on u.user_id = so.user_id
      left join ds_sales_outbound_detail sod on sod.sales_outbound_id = so.sales_outbound_id
      left join si_material m on m.material_id = sod.material_id
      <if test="ctime != null">
        where  so.sales_outbound_id = #{soid, jdbcType=BIGINT}
      </if>
    </select>
</mapper>